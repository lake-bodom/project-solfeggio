{"version":3,"sources":["components/burger/Burger.jsx","components/menu/MenuBody.jsx","components/menu/Menu.jsx","store/actions/applicationActions.js","store/actionTypes.js","containers/menuContainer.js","components/header/stat/statInfo/StatInfo.jsx","components/header/stat/statInfo/StatIntervalName.jsx","components/header/stat/Stat.jsx","containers/statContainer.js","components/header/Header.jsx","containers/headerContainer.js","components/piano/PianoKey.jsx","components/piano/PianoSection.jsx","components/piano/PianoBody.jsx","components/piano/Piano.jsx","containers/pianoContainer.js","components/buttonsGroup/ButtonsGroup.jsx","components/button/Button.jsx","components/intervals/LeftSideButtons.jsx","components/intervals/RightSideButtons.jsx","components/intervals/IntervalsOptionButtons.jsx","store/actions/statisticsActions.js","store/actions/pianoActions.js","containers/IntervalsOptionButtonsContainer.js","store/actions/intervalsActions.js","components/intervals/GroupOfIntervals.jsx","store/dataOfIntervals.js","components/intervals/ListOfIntervals.jsx","containers/listOfIntervalsContainer.js","components/intervals/Intervals.jsx","components/activateMidi/ActivateMidi.jsx","containers/activateMidiContainer.js","components/findNote/FindNote.jsx","containers/findNoteContainer.js","store/actions/notesActions.js","components/dictation/DictationPlayButtons.jsx","components/dictation/DictationOptionsButtons.jsx","components/dictation/DictationOutputElement.jsx","components/dictation/DuctationOutput.jsx","components/modalWindow/ModalWindow.jsx","components/select/Select.jsx","components/dictation/selectComponents.jsx","components/dictation/DictationSettings.jsx","containers/dictationSettingsContainer.js","store/actions/dictationActions.js","components/dictation/Dictation.jsx","containers/dictationContainter.js","components/freeMode/FreeMode.jsx","containers/freeModeContainer.js","components/changeRangeOfNotes/OptionFromSelectRanges.jsx","components/changeRangeOfNotes/SelectBody.jsx","store/arrayOfNotes.js","components/changeRangeOfNotes/SelectOfRange.jsx","components/changeRangeOfNotes/ChangeRangeOfNotes.jsx","containers/changeRangeOfNotesContainer.js","components/clearSettings/ClearSettingsModalBody.jsx","components/clearSettings/ClearSettings.jsx","components/settings/Settings.jsx","containers/settingsContainer.js","App.js","containers/appContainer.js","store/reducers/applicationReducer.js","store/reducers/pianoReducer.js","store/reducers/intervalsReducer.js","store/reducers/statisticsReducer.js","store/reducers/notesReducer.js","store/reducers/dictationReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["Burger","_ref","clickHandler","menuIsOpen","left","className","concat","react_default","a","createElement","style","onClick","MenuBody","react_router_dom","to","Menu","actionMenuAction","leftBurger","leftMenuBody","menuHandler","ReactDOM","createPortal","menu_MenuBody","burger_Burger","document","getElementById","isOpen","type","payload","actionNeedToWriteNote","bool","actionWritePlayNote","note","needToWriteNote","Object","objectSpread","id","Date","now","actionSetMode","mode","stat","mapDispatchToProps","connect","application","StatInfo","rightAnswers","amountOfAnswers","percent","Math","floor","round","Fragment","StatIntervalName","name","Stat","_ref$stat","nameOfInterval","right","showAnswer","statBody","statInfo_StatIntervalName","statInfo_StatInfo","classesNames","push","join","statistics","Statistics","Header","statContainer","PianoKey","elem","sharp","play","key","fullName","defaultProps","PianoSection","map","colorKey","includes","active","wrong","piano_PianoKey","PianoBody","arrOfNotes","elemJSX","piano_PianoSection","Piano","_this$props","this","props","piano_PianoBody","React","Component","piano","ButtonsGroup","children","classNames","cls","Button","disabled","LeftSideButtons","sequenceOfNotes","nextSequenceOfNotes","typeOfInterval","settingsIsOpen","sliceArr","actionIntervalsSettingsAction","actionNextButtonClick","actionGetNextInterval","actionHideAnswer","actionUpdatePianoKeys","playInterval","first","second","setTimeout","buttonsGroup_ButtonsGroup","button_Button","initNewIntervalSequence","RightSideButtons","actionSetActiveTypeOfInterval","primary","melodicUp","melodicDown","harmonic","IntervalsOptionButtons","actionStatisticsClearing","intervals_LeftSideButtons","intervals_RightSideButtons","actionIncrementRightAnswers","actionIncrementAmountOfAnswers","actionShowNotesOnThePiano","options","intervals","GroupOfIntervals","group","activeInterval","actionShowTheCorrectInterval","actionInverseChosenInterval","funcOnClick","interval","rusName","sequence","body","chosen","String","fromCharCode","dataOfIntervals","numberOfSemitones","getChosenIntervals","arr","filter","createGroupsOfIntervals","i","j","tmp","length","slice","getNewSequenceOfNotes","getBordersOfSequence","num","firstNote","random","secondNote","indexOf","ListOfIntervals","allIntervals","intervals_GroupOfIntervals","visibility","obj","Intervals","IntervalsOptionButtonsContainer","listOfIntervalsContainer","ActivateMidi","state","status","onMIDIOnStateChange","event","_this","setState","port","manufacturer","requestMIDIAccessSuccess","midi","inputs","values","input","next","done","value","onmidimessage","midiOnMIDImessage","onstatechange","requestMIDIAccessFailure","velocity","data","eventKey","startListening","navigator","requestMIDIAccess","sysex","then","marginTop","FindNote","setVisualEffect","playNote","setRightVisualEffect","setWrongVisualEffect","_ref2","_ref3","options1","options2","playButtonHandler","setMode","answerButtonHandler","actionSetActiveNote","prevProps","notes","DictationPlayButtons","playGuessedMelody","playWrittenMelody","DictationOptionsButtons","modeWrite","changeMode","clearButtonHandler","checkAnswerHandler","sequenceOfWrittenMelody","amountOfNotes","answerGiven","nextButtonHandler","settingsButtonHandler","access","DictationOutputElement","index","rightAnswer","rightElem","rightElemJSX","octaveName","DuctationOutput","sequenceOfMelody","answers","dictationOutputBody","elementJSX","dictation_DictationOutputElement","ModalWindow","opacity","modal","closeHandler","close","saveHandler","saveButtonHandler","cancelHandler","cancelButtonHandler","_this2","appendChild","overflow","removeChild","saveButton","saveButtonName","cancelButton","cancelButtonName","Select","onChange","defaultValue","amountOfNotesOptions","SelectAmountOfNotes","select_Select","modesOptions","modePlay","ru","SelectModes","DictationSettings","defaultModeWrite","selectAmountOfNotesHandler","e","target","selectModesHandler","actionChangeSettings","_this$props2","ModalWindow_ModalWindow","selectComponents_SelectAmountOfNotes","selectComponents_SelectModes","settingsObj","dictation","Dictation","modalIsOpen","setNewMelody","actionGetNewMelody","clearAnswers","actionWriteAnswers","playMelody","getKeysArrayOfMeloday","_loop","actionChangeMode","actionPopLastElemFromAnswerArray","arrKeysArrayOfMeloday","arrKeysArrayOfWrittenMeloday","checkAnswers","getArrayOfEqualsOfAnswers","changeStat","arr1","arr2","actionClearWrittenMelody","prevState","actionInitDictation","actionAddNoteToAnswerArray","_this$props$dictation","dictation_DictationPlayButtons","dictation_DictationOptionsButtons","dictation_DuctationOutput","dictationSettingsContainer","FreeMode","OptionFromSelectRanges","SelectBody","baseArrOfNotes","firstBorder","secondBorder","nameOfSelect","minAmountOfNotes","changeRangeOfNotes_OptionFromSelectRanges","propType","PropTypes","number","isRequired","shape","string","arrayOf","object","SelectOfRange","actionSetBordersOfRange","valueOfSelect","field","selectChangeHandler","changeRangeOfNotes_SelectBody","ChangeRangeOfNotes","_ref$piano","changeRangeOfNotes_SelectOfRange","ClearSettingsModalBody","ClearSettings","modalOpenerHandler","prev","clearSettings_ClearSettingsModalBody","Settings","changeRangeOfNotesContainer","ClearSettings_ClearSettings","App","onlyPlay","duration","midiSounds","playChordNow","find","modeDictation","N","setEchoLevel","addEventListener","keyCode","_this3","menuContainer","headerContainer","pianoContainer","react_router","path","exact","render","freeModeContainer","intervals_Intervals","findNoteContainer","dictationContainter","settingsContainer","activateMidiContainer","display","midisoundsreact_default","ref","appElementName","instruments","mapIndex","initialState","BASE_NAMES","NAMES_OF_OCTAVES","0","1","2","3","4","5","6","7","8","BASE_START_NOTE","BASE_FINISH_NOTE","octaveNumber","getBaseArrayOfNotes","start","arguments","undefined","finish","getFullArrayAndMapIndexes","k","nextObj","section","addNewFields","getIndexes","indexesOfNote","window","toConsumableArray","forEach","element","_getIndexes","max","apply","getNewActiveInterval","getNewInterval","nextActiveInterval","combineReducers","action","_getFullArrayAndMapIn2","_action$payload","reduce","sum","findIndex","_getNewData","getNewData","getNewMelody","pop","persistedState","localStorage","getItem","JSON","parse","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","sliceState","_state$intervals","setItem","stringify","es","basename","appContainer"],"mappings":"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","file":"static/js/main.3854836f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./burger.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({ clickHandler, menuIsOpen, left }) => {\r\n  const className = `burger${menuIsOpen ? \" active\" : \"\"}`;\r\n  return (\r\n    <div style={{ left: left }} className={className} onClick={clickHandler}>\r\n      <span />\r\n      <span />\r\n      <span />\r\n    </div>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  clickHandler: PropTypes.func.isRequired,\r\n  menuIsOpen: PropTypes.bool.isRequired,\r\n  left: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MenuBody = ({ left, clickHandler }) => {\r\n  return (\r\n    <div className=\"menu-body\" style={{ left: left }}>\r\n      <nav className=\"nav\">\r\n        <NavLink onClick={clickHandler} to=\"/\">\r\n          Свободная игра\r\n        </NavLink>\r\n        <NavLink onClick={clickHandler} to=\"/find-note\">\r\n          Искать ноту\r\n        </NavLink>\r\n        <NavLink onClick={clickHandler} to=\"/intervals\">\r\n          Поиск Интервала\r\n        </NavLink>\r\n        <NavLink onClick={clickHandler} to=\"/dictation\">\r\n          Музыкальный диктант\r\n        </NavLink>\r\n        <NavLink onClick={clickHandler} to=\"/options\">\r\n          Настройки\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenuBody.propTypes = {\r\n  left: PropTypes.string.isRequired,\r\n  clickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MenuBody;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./menu.css\";\r\n\r\nimport Burger from \"../burger/Burger\";\r\nimport MenuBody from \"./MenuBody\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Menu = ({ menuIsOpen, actionMenuAction }) => {\r\n  const leftBurger = menuIsOpen ? \"260px\" : \"10px\";\r\n  const leftMenuBody = menuIsOpen ? \"0px\" : \"-1000px\";\r\n\r\n  const menuHandler = () => {\r\n    actionMenuAction();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"menu\">\r\n      <MenuBody left={leftMenuBody} clickHandler={menuHandler} />\r\n      <Burger\r\n        left={leftBurger}\r\n        clickHandler={menuHandler}\r\n        menuIsOpen={menuIsOpen}\r\n      />\r\n    </div>,\r\n    document.getElementById(\"menu\")\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  menuIsOpen: PropTypes.bool.isRequired,\r\n  actionMenuAction: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Menu;\r\n","import {\r\n  MENU_ACTION,\r\n  NEED_TO_WRITE_NOTE,\r\n  WRITE_PLAY_NOTE,\r\n  INIT_DICTATION,\r\n  SET_MODE\r\n} from \"../actionTypes\";\r\n\r\nexport const actionMenuAction = isOpen => ({\r\n  type: MENU_ACTION,\r\n  payload: { isOpen }\r\n});\r\n\r\nexport const actionNeedToWriteNote = bool => ({\r\n  type: NEED_TO_WRITE_NOTE,\r\n  payload: bool\r\n});\r\n\r\nexport const actionWritePlayNote = (note, needToWriteNote) => ({\r\n  type: WRITE_PLAY_NOTE,\r\n  needToWriteNote,\r\n  payload: { ...note, id: Date.now() }\r\n});\r\n\r\nexport const actionInitDictation = bool => ({\r\n  type: INIT_DICTATION,\r\n  payload: bool\r\n});\r\n\r\nexport const actionSetMode = ({ mode, stat }) => ({\r\n  type: SET_MODE,\r\n  payload: { mode, stat }\r\n});\r\n\r\n","export const MENU_ACTION = \"MENU_ACTION\";\r\nexport const NEED_TO_WRITE_NOTE = \"NEED_TO_WRITE_NOTE\";\r\nexport const WRITE_PLAY_NOTE = \"WRITE_PLAY_NOTE\";\r\nexport const INIT_DICTATION = \"INIT_DICTATION\";\r\nexport const SET_MODE = \"SET_MODE\";\r\n\r\nexport const UPDATE_PIANO_KEYS = \"UPDATE_PIANO_KEYS\";\r\nexport const SET_BORDERS_OF_RANGE = \"SET_BORDERS_OF_RANGE\";\r\nexport const SHOW_NOTES_ON_THE_PIANO = \"SHOW_NOTES_ON_THE_PIANO\";\r\n\r\nexport const SET_ACTIVE_NOTE = \"SET_ACTIVE_NOTE\";\r\n\r\nexport const SET_ACTIVE_TYPE_OF_INTERVAL = \"SET_ACTIVE_TYPE_OF_INTERVAL\";\r\nexport const SET_NEW_INTERVAL = \"SET_NEW_INTERVAL\";\r\nexport const INTERVALS_SETTINGS_ACTION = \"INTERVALS_SETTINGS_ACTION\";\r\nexport const INVERSE_CHOSEN_INTERVAL = \"INVERSE_CHOSEN_INTERVAL\";\r\nexport const GET_ANSWER_INTERVAL = \"GET_ANSWER_INTERVAL\";\r\nexport const GET_NEXT_INTERVAL = \"GET_NEXT_INTERVAL\";\r\n\r\nexport const SHOW_THE_CORRECT_INTERVAL = \"SHOW_THE_CORRECT_INTERVAL\";\r\nexport const INCREMENT_RIGHT_ANSWERS = \"INCREMENT_RIGHT_ANSWERS\";\r\nexport const INCREMENT_AMOUNT_OF_ANSWERS = \"INCREMENT_AMOUNT_OF_ANSWERS\";\r\nexport const NEXT_BUTTON_CLICK = \"NEXT_BUTTON_CLICK\";\r\nexport const STATISTICS_CLEARING = \"STATISTICS_CLEARING\";\r\nexport const STATISTICS_HIDE_ANSWER = \"STATISTICS_HIDE_ANSWER\";\r\n\r\nexport const GET_NEW_MELODY = \"GET_NEW_MELODY\";\r\nexport const CHANGE_MODE = \"CHANGE_MODE\";\r\nexport const ADD_NOTE_TO_ANSWER_ARRAY = \"ADD_NOTE_TO_ANSWER_ARRAY\";\r\nexport const POP_LAST_ELEM_FROM_ANSWER_ARRAY =\r\n  \"POP_LAST_ELEM_FROM_ANSWER_ARRAY\";\r\nexport const WRITE_ANSWERS = \"WRITE_ANSWERS\";\r\nexport const CLEAR_WRITTEN_MELODY = \"CLEAR_WRITTEN_MELODY\";\r\nexport const CHANGE_SETTINGS = \"CHANGE_SETTINGS\";\r\n","import Menu from \"../components/menu/Menu\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { actionMenuAction } from \"../store/actions/applicationActions\";\r\n\r\nconst mapStateToProps = ({ application }) => ({\r\n  menuIsOpen: application.menuIsOpen\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionMenuAction\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Menu);\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatInfo = ({ rightAnswers, amountOfAnswers }) => {\r\n  const percent =\r\n    amountOfAnswers !== 0\r\n      ? Math.floor(Math.round((rightAnswers / amountOfAnswers) * 100))\r\n      : \"0\";\r\n  return (\r\n    <React.Fragment>\r\n      <span>{rightAnswers}</span>&nbsp;/&nbsp;\r\n      <span>{amountOfAnswers}</span>&nbsp;\r\n      <span>({percent}%)</span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nStatInfo.propTypes = {\r\n  rightAnswers: PropTypes.number.isRequired,\r\n  amountOfAnswers: PropTypes.number.isRequired\r\n};\r\n\r\nexport default StatInfo;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatIntervalName = ({ name }) => {\r\n  return <span>{name}</span>;\r\n};\r\n\r\nStatIntervalName.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default StatIntervalName;\r\n","import React from \"react\";\r\nimport StatInfo from \"./statInfo/StatInfo\";\r\nimport StatIntervalName from \"./statInfo/StatIntervalName\";\r\nimport \"./stat.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Stat = ({\r\n  stat: { nameOfInterval, right, rightAnswers, amountOfAnswers, showAnswer }\r\n}) => {\r\n  const statBody = nameOfInterval ? (\r\n    <StatIntervalName name={nameOfInterval} />\r\n  ) : (\r\n      <StatInfo rightAnswers={rightAnswers} amountOfAnswers={amountOfAnswers} />\r\n    );\r\n\r\n  let classesNames = [\"stat\"];\r\n\r\n  if (showAnswer) {\r\n    if (right) {\r\n      classesNames.push(\"rightAnswer\");\r\n    } else {\r\n      classesNames.push(\"wrongAnswer\");\r\n    }\r\n  }\r\n\r\n  return <div className={classesNames.join(\" \")}>{statBody}</div>;\r\n};\r\n\r\nStat.propTypes = {\r\n  stat: PropTypes.shape({\r\n    nameOfInterval: PropTypes.string,\r\n    right: PropTypes.bool.isRequired,\r\n    rightAnswers: PropTypes.number.isRequired,\r\n    amountOfAnswers: PropTypes.number.isRequired,\r\n    showAnswer: PropTypes.bool.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default Stat;\r\n","import Statistics from \"../components/header/stat/Stat\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = ({ statistics }) => ({\r\n  stat: statistics\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\r\n","import React from \"react\";\r\nimport Stat from \"../../containers/statContainer\";\r\nimport \"./header.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ stat, mode }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      {stat ? <Stat /> : null}\r\n      {mode ? <h2>{mode}</h2> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  stat: PropTypes.bool.isRequired,\r\n  mode: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import Header from \"../components/header/Header\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = ({ application }) => ({\r\n\tmode: application.mode,\r\n\tstat: application.stat\r\n});\r\n\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PianoKey = ({ elem, className, sharp, play }) => {\r\n  const handleClick = () => {\r\n    play(elem.key);\r\n  };\r\n  return (\r\n    <div className={className.join(\" \")} onClick={handleClick}>\r\n      {sharp ? elem.name : elem.fullName}\r\n    </div>\r\n  );\r\n};\r\n\r\nPianoKey.propTypes = {\r\n  elem: PropTypes.shape({\r\n    key: PropTypes.number,\r\n    name: PropTypes.string,\r\n    fullName: PropTypes.string\r\n  }),\r\n  className: PropTypes.arrayOf(PropTypes.string),\r\n  sharp: PropTypes.bool,\r\n  play: PropTypes.func\r\n};\r\n\r\nPianoKey.defaultProps = {\r\n  play: () => {}\r\n};\r\n\r\nexport default PianoKey;\r\n","import React from \"react\";\r\nimport PianoKey from \"./PianoKey\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PianoSection = ({ elem, play }) => {\r\n  const section = elem.map(elem => {\r\n    const sharp = elem.name.includes(\"#\");\r\n    let className = [\"piano-key\"];\r\n    const colorKey = sharp ? \"piano-black-key\" : \"piano-white-key\";\r\n    className.push(colorKey);\r\n\r\n    if (elem.active) {\r\n      className.push(\"piano-key-active\");\r\n    }\r\n    if (elem.right) {\r\n      className.push(\"piano-key-right\");\r\n    }\r\n\r\n    if (elem.wrong) {\r\n      className.push(\"piano-key-wrong\");\r\n    }\r\n\r\n    return (\r\n      <PianoKey play={play} key={elem.key} elem={elem} className={className} />\r\n    );\r\n  });\r\n\r\n  return section;\r\n};\r\n\r\nPianoSection.propTypes = {\r\n  play: PropTypes.func,\r\n  elem: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nPianoSection.defaultProps = {\r\n  play: () => {},\r\n  elem: []\r\n};\r\n\r\nexport default PianoSection;\r\n","import React from \"react\";\r\nimport PianoSection from \"./PianoSection\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PianoBody = ({ arrOfNotes, play }) => {\r\n  const bodyPiano = arrOfNotes.map(elem => {\r\n    const elemJSX = <PianoSection elem={elem} play={play} />;\r\n    return (\r\n      <div key={elem[0].fullName} className={\"piano-keys-section\"}>\r\n        {elemJSX}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return bodyPiano;\r\n};\r\n\r\nPianoBody.propTypes = {\r\n  arrOfNotes: PropTypes.arrayOf(PropTypes.array),\r\n  play: PropTypes.func\r\n};\r\n\r\nPianoBody.defaultProps = {\r\n  arrOfNotes: [],\r\n  play: () => {}\r\n};\r\n\r\nexport default PianoBody;\r\n","import React from \"react\";\r\n\r\nimport \"./piano.css\";\r\nimport PianoBody from \"./PianoBody\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Piano extends React.Component {\r\n  render() {\r\n    const { arrOfNotes, play } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"piano\">\r\n          <PianoBody arrOfNotes={arrOfNotes} play={play} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPiano.propTypes = {\r\n  arrOfNotes: PropTypes.arrayOf(PropTypes.array),\r\n  play: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Piano;\r\n","import Piano from \"../components/piano/Piano\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = ({ piano }) => ({\r\n  arrOfNotes: piano.arrOfNotes\r\n});\r\n\r\nexport default connect(mapStateToProps)(Piano);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./buttonsGroup.css\";\r\n\r\nconst ButtonsGroup = ({ children, cls }) => {\r\n    let classNames = [\"buttonGroup\", cls];\r\n    return <div className={classNames.join(\" \")}>{children}</div>;\r\n};\r\n\r\nButtonsGroup.propTypes = {\r\n    children: PropTypes.array,\r\n    cls: PropTypes.string\r\n};\r\n\r\nButtonsGroup.defaultProps = {\r\n    children: \"\",\r\n    cls: \"horizontal\"\r\n};\r\nexport default ButtonsGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ onClick, children, cls, active, disabled }) => {\r\n  let classNames = [\"button\", cls];\r\n\r\n  if (active) {\r\n    classNames.push(\"active\");\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={classNames.join(\" \")}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  onClick: PropTypes.func,\r\n  cls: PropTypes.string,\r\n  active: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nButton.defaultProps = {\r\n  children: \"click\",\r\n  onClick: () => { },\r\n  cls: \"secondary-outline\",\r\n  active: false\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LeftSideButtons = ({\r\n  sequenceOfNotes,\r\n  nextSequenceOfNotes,\r\n  typeOfInterval,\r\n  settingsIsOpen,\r\n  showAnswer,\r\n  sliceArr,\r\n  play,\r\n  actionIntervalsSettingsAction,\r\n  actionNextButtonClick,\r\n  actionGetNextInterval,\r\n  actionHideAnswer,\r\n  actionUpdatePianoKeys\r\n}) => {\r\n  const playInterval = () => {\r\n    let first, second;\r\n\r\n    if (showAnswer) {\r\n      first = nextSequenceOfNotes[0];\r\n      second = nextSequenceOfNotes[1];\r\n    } else {\r\n      first = sequenceOfNotes[0];\r\n      second = sequenceOfNotes[1];\r\n    }\r\n\r\n    switch (typeOfInterval) {\r\n      case \"melodicUp\": {\r\n        play(first);\r\n        setTimeout(() => {\r\n          play(second);\r\n        }, 800);\r\n        break;\r\n      }\r\n      case \"melodicDown\": {\r\n        play(second);\r\n        setTimeout(() => {\r\n          play(first);\r\n        }, 800);\r\n        break;\r\n      }\r\n      case \"harmonic\": {\r\n        play(first);\r\n        play(second);\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const nextClickHandler = () => {\r\n    actionNextButtonClick(!settingsIsOpen);\r\n    actionGetNextInterval({ sliceArr });\r\n    actionUpdatePianoKeys();\r\n    actionHideAnswer();\r\n    playInterval();\r\n  };\r\n\r\n  const optionsClickHandler = () => {\r\n    actionIntervalsSettingsAction(!settingsIsOpen);\r\n    const initNewIntervalSequence = true;\r\n\r\n    if (settingsIsOpen) {\r\n      actionNextButtonClick();\r\n      actionUpdatePianoKeys();\r\n      actionHideAnswer();\r\n      actionGetNextInterval({ sliceArr, initNewIntervalSequence });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonsGroup cls=\"horizontal\">\r\n      <Button\r\n        cls={settingsIsOpen ? \"secondary\" : \"info\"}\r\n        disabled={settingsIsOpen ? true : false}\r\n        onClick={showAnswer ? nextClickHandler : playInterval}\r\n      >\r\n        {showAnswer ? \"Дальше\" : \"Играть интервал\"}\r\n      </Button>\r\n      <Button\r\n        cls={settingsIsOpen ? \"info\" : \"secondary\"}\r\n        onClick={optionsClickHandler}\r\n      >\r\n        {settingsIsOpen ? \"Установить\" : \"Настройки\"}\r\n      </Button>\r\n    </ButtonsGroup>\r\n  );\r\n};\r\n\r\nLeftSideButtons.propTypes = {\r\n  settingsIsOpen: PropTypes.bool,\r\n  sequenceOfNotes: PropTypes.arrayOf(PropTypes.number),\r\n  nextSequenceOfNotes: PropTypes.arrayOf(PropTypes.number),\r\n  typeOfInterval: PropTypes.string.isRequired,\r\n  showAnswer: PropTypes.bool,\r\n  sliceArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  play: PropTypes.func.isRequired,\r\n  actionIntervalsSettingsAction: PropTypes.func.isRequired,\r\n  actionNextButtonClick: PropTypes.func.isRequired,\r\n  actionGetNextInterval: PropTypes.func.isRequired,\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired,\r\n  actionHideAnswer: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LeftSideButtons;\r\n\r\n","import React from \"react\";\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RightSideButtons = ({\r\n  actionSetActiveTypeOfInterval,\r\n  typeOfInterval\r\n}) => {\r\n  const primary = \"primary active\";\r\n  const primaryOutline = \"primary-outline\";\r\n\r\n  const melodicUp = typeOfInterval === \"melodicUp\";\r\n  const melodicDown = typeOfInterval === \"melodicDown\";\r\n  const harmonic = typeOfInterval === \"harmonic\";\r\n\r\n  return (\r\n    <ButtonsGroup cls=\"horizontal\">\r\n      <Button\r\n        cls={melodicUp ? primary : primaryOutline}\r\n        onClick={() => {\r\n          actionSetActiveTypeOfInterval(\"melodicUp\");\r\n        }}\r\n        disabled={melodicUp ? true : false}\r\n      >\r\n        Мелодический вверх\r\n      </Button>\r\n      <Button\r\n        cls={melodicDown ? primary : primaryOutline}\r\n        onClick={() => {\r\n          actionSetActiveTypeOfInterval(\"melodicDown\");\r\n        }}\r\n        disabled={melodicDown ? true : false}\r\n      >\r\n        Мелодический вниз\r\n      </Button>\r\n      <Button\r\n        cls={harmonic ? primary : primaryOutline}\r\n        onClick={() => {\r\n          actionSetActiveTypeOfInterval(\"harmonic\");\r\n        }}\r\n        disabled={harmonic ? true : false}\r\n      >\r\n        Гармонический\r\n      </Button>\r\n    </ButtonsGroup>\r\n  );\r\n};\r\n\r\nRightSideButtons.propTypes = {\r\n  typeOfInterval: PropTypes.string.isRequired,\r\n  actionSetActiveTypeOfInterval: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RightSideButtons;\r\n","import React from \"react\";\r\nimport LeftSideButtons from \"./LeftSideButtons\";\r\nimport RightSideButtons from \"./RightSideButtons\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass IntervalsOptionButtons extends React.Component {\r\n  componentDidMount() {\r\n    const initNewIntervalSequence = true;\r\n\r\n    this.props.actionGetNextInterval({\r\n      sliceArr: this.props.sliceArr,\r\n      initNewIntervalSequence\r\n    });\r\n\r\n    this.props.actionSetMode({ mode: \"Поиск интервала\", stat: true });\r\n    this.props.actionUpdatePianoKeys();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.actionStatisticsClearing();\r\n    this.props.actionIntervalsSettingsAction(false);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      sliceArr,\r\n      play,\r\n      typeOfInterval,\r\n      sequenceOfNotes,\r\n      nextSequenceOfNotes,\r\n      settingsIsOpen,\r\n      showAnswer,\r\n      actionSetActiveTypeOfInterval,\r\n      actionIntervalsSettingsAction,\r\n      actionNextButtonClick,\r\n      actionGetNextInterval,\r\n      actionHideAnswer,\r\n      actionUpdatePianoKeys\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className=\"intervalsOptionsButtons\">\r\n        <LeftSideButtons\r\n          sequenceOfNotes={sequenceOfNotes}\r\n          nextSequenceOfNotes={nextSequenceOfNotes}\r\n          typeOfInterval={typeOfInterval}\r\n          settingsIsOpen={settingsIsOpen}\r\n          showAnswer={showAnswer}\r\n          sliceArr={sliceArr}\r\n          play={play}\r\n          actionIntervalsSettingsAction={actionIntervalsSettingsAction}\r\n          actionNextButtonClick={actionNextButtonClick}\r\n          actionGetNextInterval={actionGetNextInterval}\r\n          actionUpdatePianoKeys={actionUpdatePianoKeys}\r\n          actionHideAnswer={actionHideAnswer}\r\n        />\r\n        <RightSideButtons\r\n          typeOfInterval={typeOfInterval}\r\n          actionSetActiveTypeOfInterval={actionSetActiveTypeOfInterval}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIntervalsOptionButtons.propTypes = {\r\n  play: PropTypes.func.isRequired,\r\n  sliceArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  sequenceOfNotes: PropTypes.arrayOf(PropTypes.number),\r\n  nextSequenceOfNotes: PropTypes.arrayOf(PropTypes.number),\r\n  typeOfInterval: PropTypes.string.isRequired,\r\n  showAnswer: PropTypes.bool,\r\n  actionSetActiveTypeOfInterval: PropTypes.func.isRequired,\r\n  actionIntervalsSettingsAction: PropTypes.func.isRequired,\r\n  actionNextButtonClick: PropTypes.func.isRequired,\r\n  actionGetNextInterval: PropTypes.func.isRequired,\r\n  actionStatisticsClearing: PropTypes.func.isRequired,\r\n  actionHideAnswer: PropTypes.func.isRequired,\r\n  actionSetMode: PropTypes.func.isRequired,\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired,\r\n  settingsIsOpen: PropTypes.bool\r\n};\r\n\r\nexport default IntervalsOptionButtons;\r\n","import {\r\n  INCREMENT_RIGHT_ANSWERS,\r\n  INCREMENT_AMOUNT_OF_ANSWERS,\r\n  NEXT_BUTTON_CLICK,\r\n  STATISTICS_CLEARING,\r\n  STATISTICS_HIDE_ANSWER\r\n} from \"../actionTypes\";\r\n\r\nexport const actionIncrementRightAnswers = name => ({\r\n  type: INCREMENT_RIGHT_ANSWERS,\r\n  payload: name\r\n});\r\n\r\nexport const actionIncrementAmountOfAnswers = name => ({\r\n  type: INCREMENT_AMOUNT_OF_ANSWERS,\r\n  payload: name\r\n});\r\n\r\nexport const actionNextButtonClick = name => ({\r\n  type: NEXT_BUTTON_CLICK,\r\n  payload: name\r\n});\r\n\r\nexport const actionStatisticsClearing = () => ({\r\n  type: STATISTICS_CLEARING\r\n});\r\n\r\nexport const actionHideAnswer = () => ({\r\n  type: STATISTICS_HIDE_ANSWER\r\n});\r\n","import {\r\n  UPDATE_PIANO_KEYS,\r\n  SET_BORDERS_OF_RANGE,\r\n  SHOW_NOTES_ON_THE_PIANO,\r\n} from \"../actionTypes\";\r\n\r\nexport const actionUpdatePianoKeys = () => ({\r\n  type: UPDATE_PIANO_KEYS\r\n});\r\n\r\nexport const actionSetBordersOfRange = arr => ({\r\n  type: SET_BORDERS_OF_RANGE,\r\n  payload: { firstBorder: arr[0], secondBorder: arr[1] }\r\n});\r\n\r\nexport const actionShowNotesOnThePiano = payload => ({\r\n  type: SHOW_NOTES_ON_THE_PIANO,\r\n  payload\r\n});\r\n","import IntervalsOptionButtons from \"../components/intervals/IntervalsOptionButtons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  actionSetActiveTypeOfInterval,\r\n  actionIntervalsSettingsAction,\r\n  actionGetNextInterval\r\n} from \"../store/actions/intervalsActions\";\r\n\r\nimport {\r\n  actionStatisticsClearing,\r\n  actionNextButtonClick,\r\n  actionHideAnswer\r\n} from \"../store/actions/statisticsActions\";\r\n\r\nimport { actionUpdatePianoKeys } from \"../store/actions/pianoActions\";\r\n\r\nimport { actionSetMode } from \"../store/actions/applicationActions\";\r\n\r\nconst mapStateToProps = ({ intervals, piano }) => ({\r\n  sliceArr: piano.sliceArr,\r\n  sequenceOfNotes: intervals.sequenceOfNotes,\r\n  nextSequenceOfNotes: intervals.nextSequenceOfNotes,\r\n  typeOfInterval: intervals.typeOfInterval,\r\n  showAnswer: intervals.showAnswer,\r\n  settingsIsOpen: intervals.settingsIsOpen\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionSetActiveTypeOfInterval,\r\n  actionIntervalsSettingsAction,\r\n  actionNextButtonClick,\r\n  actionGetNextInterval,\r\n  actionStatisticsClearing,\r\n  actionHideAnswer,\r\n  actionSetMode,\r\n  actionUpdatePianoKeys\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IntervalsOptionButtons);\r\n","import {\r\n  SET_ACTIVE_TYPE_OF_INTERVAL,\r\n  INTERVALS_SETTINGS_ACTION,\r\n  INVERSE_CHOSEN_INTERVAL,\r\n  GET_ANSWER_INTERVAL,\r\n  SHOW_THE_CORRECT_INTERVAL,\r\n  GET_NEXT_INTERVAL\r\n} from \"../actionTypes\";\r\n\r\nexport const actionSetActiveTypeOfInterval = active => ({\r\n  type: SET_ACTIVE_TYPE_OF_INTERVAL,\r\n  payload: active\r\n});\r\n\r\nexport const actionIntervalsSettingsAction = payload => ({\r\n  type: INTERVALS_SETTINGS_ACTION,\r\n  payload\r\n});\r\n\r\nexport const actionInverseChosenInterval = obj => ({\r\n  type: INVERSE_CHOSEN_INTERVAL,\r\n  payload: obj\r\n});\r\n\r\nexport const actionGetAnswerIntervals = () => ({\r\n  type: GET_ANSWER_INTERVAL\r\n});\r\n\r\nexport const actionShowTheCorrectInterval = () => ({\r\n  type: SHOW_THE_CORRECT_INTERVAL\r\n});\r\n\r\nexport const actionGetNextInterval = options => ({\r\n  type: GET_NEXT_INTERVAL,\r\n  payload: options\r\n});\r\n","import React from \"react\";\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupOfIntervals = ({\r\n  group,\r\n  settingsIsOpen,\r\n  activeInterval,\r\n  sequenceOfNotes,\r\n  actionShowTheCorrectInterval,\r\n  actionInverseChosenInterval,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionShowNotesOnThePiano\r\n}) => {\r\n  const checkAnswer = interval => {\r\n    actionShowTheCorrectInterval();\r\n    const right = activeInterval.name === interval.name;\r\n    const type = right ? \"right\" : \"wrong\";\r\n\r\n    if (right) {\r\n      actionIncrementRightAnswers(activeInterval.rusName);\r\n      actionShowNotesOnThePiano({ type, sequence: sequenceOfNotes });\r\n    } else {\r\n      actionIncrementAmountOfAnswers(activeInterval.rusName);\r\n      actionShowNotesOnThePiano({ type, sequence: sequenceOfNotes });\r\n    }\r\n  };\r\n\r\n  const funcOnClick = settingsIsOpen\r\n    ? actionInverseChosenInterval\r\n    : checkAnswer;\r\n\r\n  const body = group.map(interval => {\r\n    return (\r\n      <Button\r\n        key={interval.name}\r\n        onClick={() => {\r\n          funcOnClick(interval);\r\n        }}\r\n      >\r\n        {settingsIsOpen ? (\r\n          <span className=\"check\">\r\n            {interval.chosen\r\n              ? String.fromCharCode(10003)\r\n              : String.fromCharCode(215)}\r\n          </span>\r\n        ) : null}\r\n        {interval.rusName}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  GroupOfIntervals.propTypes = {\r\n    settingsIsOpen: PropTypes.bool,\r\n    group: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    activeInterval: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      rusName: PropTypes.string.isRequired,\r\n      numberOfSemitones: PropTypes.number.isRequired,\r\n      chosen: PropTypes.bool.isRequired\r\n    }).isRequired,\r\n    sequenceOfNotes: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    actionShowTheCorrectInterval: PropTypes.func.isRequired,\r\n    actionInverseChosenInterval: PropTypes.func.isRequired,\r\n    actionIncrementRightAnswers: PropTypes.func.isRequired,\r\n    actionIncrementAmountOfAnswers: PropTypes.func.isRequired,\r\n    actionShowNotesOnThePiano: PropTypes.func.isRequired\r\n  };\r\n\r\n  return <ButtonsGroup cls=\"vertical\">{body}</ButtonsGroup>;\r\n};\r\n\r\nexport default GroupOfIntervals;\r\n\r\n","export const dataOfIntervals = [\r\n  {\r\n    name: \"minorSecond\",\r\n    rusName: \"Малая Секунда\",\r\n    numberOfSemitones: 1,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"majorSecond\",\r\n    rusName: \"Большая Секунда\",\r\n    numberOfSemitones: 2,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"minorThird\",\r\n    rusName: \"Малая Терция\",\r\n    numberOfSemitones: 3,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"majorThird\",\r\n    rusName: \"Большая Терция\",\r\n    numberOfSemitones: 4,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"perfectFourth\",\r\n    rusName: \"Чистая Кварта\",\r\n    numberOfSemitones: 5,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"triton\",\r\n    rusName: \"Тритон\",\r\n    numberOfSemitones: 6,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"perfectFifth\",\r\n    rusName: \"Чистая Квинта\",\r\n    numberOfSemitones: 7,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"minorSixth\",\r\n    rusName: \"Малая Секста\",\r\n    numberOfSemitones: 8,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"majorSixth\",\r\n    rusName: \"Большая Секста\",\r\n    numberOfSemitones: 9,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"minorSeventh\",\r\n    rusName: \"Малая Септима\",\r\n    numberOfSemitones: 10,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"majorSeventh\",\r\n    rusName: \"Большая Септима\",\r\n    numberOfSemitones: 11,\r\n    chosen: true\r\n  },\r\n  {\r\n    name: \"octave\",\r\n    rusName: \"Октава\",\r\n    numberOfSemitones: 12,\r\n    chosen: true\r\n  }\r\n];\r\n\r\nexport const getChosenIntervals = arr => {\r\n  return arr.filter(elem => {\r\n    return elem.chosen;\r\n  });\r\n};\r\n\r\nexport const createGroupsOfIntervals = arr => {\r\n  const chunk = 4;\r\n  var i,\r\n    j,\r\n    tmp = [];\r\n  for (i = 0, j = arr.length; i < j; i += chunk) {\r\n    tmp.push(arr.slice(i, i + chunk));\r\n  }\r\n  return tmp;\r\n};\r\n\r\nexport const getNewInterval = arr => {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n};\r\n\r\nexport const getNewSequenceOfNotes = (sliceArr, activeInterval) => {\r\n  const { numberOfSemitones } = activeInterval;\r\n\r\n  const sequence = getBordersOfSequence(sliceArr, numberOfSemitones);\r\n\r\n  return sequence;\r\n};\r\n\r\nconst getBordersOfSequence = (arr, num) => {\r\n  let firstNote = arr[Math.floor(Math.random() * arr.length)];\r\n  let secondNote = arr[arr.indexOf(firstNote) + num];\r\n\r\n  if (!secondNote) {\r\n    secondNote = arr[arr.length - 1];\r\n    firstNote = arr[arr.indexOf(secondNote) - num];\r\n  }\r\n\r\n  return [firstNote.key, secondNote.key];\r\n};\r\n","import React from \"react\";\r\nimport GroupOfIntervals from \"./GroupOfIntervals\";\r\n\r\nimport {\r\n  getChosenIntervals,\r\n  createGroupsOfIntervals\r\n} from \"../../store/dataOfIntervals\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListOfIntervals = ({\r\n  settingsIsOpen,\r\n  allIntervals,\r\n  activeInterval,\r\n  showAnswer,\r\n  sequenceOfNotes,\r\n  actionInverseChosenInterval,\r\n  actionShowTheCorrectInterval,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionShowNotesOnThePiano\r\n}) => {\r\n\r\n  let arr = [];\r\n\r\n  if (settingsIsOpen) {\r\n    arr = createGroupsOfIntervals(allIntervals);\r\n  } else {\r\n    arr = createGroupsOfIntervals(getChosenIntervals(allIntervals));\r\n  }\r\n\r\n  const body = arr.map(group => (\r\n    <GroupOfIntervals\r\n      group={group}\r\n      key={group[0].name}\r\n      settingsIsOpen={settingsIsOpen}\r\n      activeInterval={activeInterval}\r\n      sequenceOfNotes={sequenceOfNotes}\r\n      actionShowTheCorrectInterval={actionShowTheCorrectInterval}\r\n      actionInverseChosenInterval={actionInverseChosenInterval}\r\n      actionIncrementRightAnswers={actionIncrementRightAnswers}\r\n      actionIncrementAmountOfAnswers={actionIncrementAmountOfAnswers}\r\n      actionShowNotesOnThePiano={actionShowNotesOnThePiano}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className=\"listOfIntervals\"\r\n      style={showAnswer && !settingsIsOpen ? { visibility: \"hidden\" } : null}\r\n    >\r\n      {body}\r\n    </div>\r\n  );\r\n};\r\n\r\nListOfIntervals.propTypes = {\r\n  actionInverseChosenInterval: PropTypes.func.isRequired,\r\n  actionShowTheCorrectInterval: PropTypes.func.isRequired,\r\n  actionIncrementRightAnswers: PropTypes.func.isRequired,\r\n  actionIncrementAmountOfAnswers: PropTypes.func.isRequired,\r\n  actionShowNotesOnThePiano: PropTypes.func.isRequired,\r\n  allIntervals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  activeInterval: PropTypes.object,\r\n  showAnswer: PropTypes.bool,\r\n  sequenceOfNotes: PropTypes.arrayOf(PropTypes.number),\r\n  settingsIsOpen: PropTypes.bool\r\n\r\n};\r\n\r\nexport default ListOfIntervals;\r\n\r\n/*\r\n\r\nactiveInterval: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    rusName: PropTypes.string,\r\n    numberOfSemitones: PropTypes.number,\r\n    chosen: PropTypes.bool\r\n  }).isRequired,\r\n\r\n{\r\n\r\n\r\n  \"sequenceOfNotes\": [\r\n    50,\r\n    57\r\n  ],\r\n}\r\n\r\n*/","import ListOfIntervals from \"../components/intervals/ListOfIntervals\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  actionInverseChosenInterval,\r\n  actionShowTheCorrectInterval\r\n} from \"../store/actions/intervalsActions\";\r\n\r\nimport {\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers\r\n} from \"../store/actions/statisticsActions\";\r\n\r\nimport { actionShowNotesOnThePiano } from \"../store/actions/pianoActions\";\r\n\r\nconst mapStateToProps = ({ intervals }) => ({\r\n  settingsIsOpen: intervals.settingsIsOpen,\r\n  allIntervals: intervals.allIntervals,\r\n  activeInterval: intervals.activeInterval,\r\n  showAnswer: intervals.showAnswer,\r\n  sequenceOfNotes: intervals.sequenceOfNotes\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionInverseChosenInterval,\r\n  actionShowTheCorrectInterval,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionShowNotesOnThePiano\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListOfIntervals);\r\n","import React from \"react\";\r\nimport \"./intervals.css\";\r\n\r\nimport IntervalsOptionButtonsContainer from \"../../containers/IntervalsOptionButtonsContainer\";\r\nimport ListOfIntervalsContainer from \"../../containers/listOfIntervalsContainer\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Intervals = ({ play }) => {\r\n  return (\r\n    <div className=\"intervals\">\r\n      <IntervalsOptionButtonsContainer\r\n        play={play}\r\n      ></IntervalsOptionButtonsContainer>\r\n\r\n      <ListOfIntervalsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nIntervals.propTypes = {\r\n  play: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Intervals;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ActivateMidi extends Component {\r\n  state = { status: \"\" };\r\n\r\n  onMIDIOnStateChange = event => {\r\n    this.setState({\r\n      status:\r\n        event.port.manufacturer + \" \" + event.port.name + \" \" + event.port.state\r\n    });\r\n  };\r\n\r\n  requestMIDIAccessSuccess = midi => {\r\n    var inputs = midi.inputs.values();\r\n    for (\r\n      var input = inputs.next();\r\n      input && !input.done;\r\n      input = inputs.next()\r\n    ) {\r\n      input.value.onmidimessage = this.midiOnMIDImessage;\r\n    }\r\n    midi.onstatechange = this.onMIDIOnStateChange;\r\n  };\r\n\r\n  requestMIDIAccessFailure = () => {\r\n    this.setState({ status: \"MIDI Access Failure\" });\r\n  };\r\n\r\n  midiOnMIDImessage = event => {\r\n    const keydown = 144;\r\n    const keyup = 128;\r\n    const velocity = event.data[2];\r\n\r\n    const eventKey = event.data[0];\r\n    const note = event.data[1];\r\n\r\n    const { sliceArr } = this.props;\r\n    if (note >= sliceArr[0].key && note <= sliceArr[sliceArr.length - 1].key) {\r\n      const options = { sequence: [note], type: \"active\" };\r\n\r\n      if (eventKey === keydown && velocity !== 0) {\r\n        this.props.actionShowNotesOnThePiano(options);\r\n        this.props.play(note);\r\n      } else if (eventKey === keyup || velocity === 0) {\r\n        this.props.actionUpdatePianoKeys();\r\n      }\r\n    }\r\n  };\r\n\r\n  startListening = () => {\r\n    this.setState({ status: \"waiting\" });\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator\r\n        .requestMIDIAccess({ sysex: true })\r\n        .then(this.requestMIDIAccessSuccess, this.requestMIDIAccessFailure);\r\n    } else {\r\n      this.setState({ status: \"Нет доступа к миди-устройству\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"activate-midi\">\r\n        <Button cls=\"primary\" onClick={this.startListening}>\r\n          Включить MIDI клавиатуру\r\n        </Button>\r\n        <p style={{ marginTop: \"20px\" }}>\r\n          <b>Статус midi:</b>{\" \"}\r\n          {this.state.status ? this.state.status : \"отключена\"}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nActivateMidi.propTypes = {\r\n  sliceArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  play: PropTypes.func.isRequired,\r\n  actionShowNotesOnThePiano: PropTypes.func.isRequired,\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired\r\n};\r\n","import ActivateMidi from \"../components/activateMidi/ActivateMidi\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  actionShowNotesOnThePiano,\r\n  actionUpdatePianoKeys\r\n} from \"../store/actions/pianoActions\";\r\n\r\nconst mapStateToProps = ({ piano }) => ({\r\n  sliceArr: piano.sliceArr\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionShowNotesOnThePiano,\r\n  actionUpdatePianoKeys\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivateMidi);\r\n","import React, { Component } from \"react\";\r\n\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class FindNote extends Component {\r\n  componentDidMount() {\r\n    this.props.actionSetActiveNote(this.props.sliceArr);\r\n    this.props.actionSetMode({ mode: \"Искать ноту\", stat: true });\r\n    this.props.actionUpdatePianoKeys();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.actionStatisticsClearing();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.needToWriteNote && !this.props.needToWriteNote) {\r\n      if (this.props.playNote !== null) {\r\n        const playNote = this.props.playNote.key;\r\n        const note = this.props.note;\r\n\r\n        if (playNote === note) {\r\n          this.props.actionIncrementRightAnswers();\r\n          this.setVisualEffect({ right: true });\r\n        } else {\r\n          this.props.actionIncrementAmountOfAnswers();\r\n          this.setVisualEffect({ right: false, note });\r\n        }\r\n        this.props.actionSetActiveNote(this.props.sliceArr);\r\n      }\r\n    }\r\n  }\r\n\r\n  setVisualEffect = ({ right, note }) => {\r\n    const sequence = [this.props.playNote.key];\r\n    if (right) {\r\n      this.setRightVisualEffect({ sequence });\r\n    } else {\r\n      this.setWrongVisualEffect({ sequence, note });\r\n    }\r\n  };\r\n\r\n  setRightVisualEffect = ({ sequence }) => {\r\n    const options = { sequence, type: \"right\" };\r\n    this.props.actionShowNotesOnThePiano(options);\r\n\r\n    setTimeout(() => {\r\n      this.props.actionUpdatePianoKeys();\r\n      this.props.actionHideAnswer();\r\n    }, 2000);\r\n  };\r\n\r\n  setWrongVisualEffect = ({ sequence, note }) => {\r\n    const options1 = {\r\n      sequence,\r\n      type: \"wrong\"\r\n    };\r\n\r\n    const options2 = {\r\n      sequence: [note],\r\n      type: \"right\"\r\n    };\r\n\r\n    this.props.actionShowNotesOnThePiano(options1);\r\n    this.props.actionShowNotesOnThePiano(options2);\r\n\r\n    setTimeout(() => {\r\n      this.props.actionUpdatePianoKeys();\r\n      this.props.actionHideAnswer();\r\n    }, 1500);\r\n  };\r\n\r\n  playButtonHandler = () => {\r\n    const { note } = this.props;\r\n\r\n    this.props.play(note);\r\n    this.setMode(false);\r\n  };\r\n\r\n  answerButtonHandler = () => {\r\n    this.setMode(true);\r\n  };\r\n\r\n  setMode = bool => {\r\n    if (this.props.needToWriteNote !== bool) {\r\n      this.props.actionNeedToWriteNote(bool);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { needToWriteNote } = this.props;\r\n    const { playButtonHandler, answerButtonHandler } = this;\r\n\r\n    return (\r\n      <div className=\"findNote\">\r\n        <ButtonsGroup cls=\"horizontal\">\r\n          <Button\r\n            cls={needToWriteNote ? \"secondary-outline\" : \"info\"}\r\n            onClick={playButtonHandler}\r\n          >\r\n            Играть ноту\r\n          </Button>\r\n          <Button\r\n            cls={needToWriteNote ? \"info\" : \"secondary-outline\"}\r\n            onClick={answerButtonHandler}\r\n          >\r\n            Ответить\r\n          </Button>\r\n        </ButtonsGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFindNote.propTypes = {\r\n  play: PropTypes.func.isRequired,\r\n  actionSetActiveNote: PropTypes.func.isRequired,\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired,\r\n  actionSetMode: PropTypes.func.isRequired,\r\n  actionShowNotesOnThePiano: PropTypes.func.isRequired,\r\n  actionNeedToWriteNote: PropTypes.func.isRequired,\r\n  actionHideAnswer: PropTypes.func.isRequired,\r\n  actionIncrementAmountOfAnswers: PropTypes.func.isRequired,\r\n  actionIncrementRightAnswers: PropTypes.func.isRequired,\r\n  actionStatisticsClearing: PropTypes.func.isRequired,\r\n  statistics: PropTypes.shape({\r\n    nameOfInterval: PropTypes.string.isRequired,\r\n    rightAnswers: PropTypes.number.isRequired,\r\n    amountOfAnswers: PropTypes.number.isRequired,\r\n    right: PropTypes.bool.isRequired,\r\n    showAnswer: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  note: PropTypes.number.isRequired,\r\n  sliceArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  playNote: PropTypes.object,\r\n  needToWriteNote: PropTypes\r\n};\r\n\r\n","import FindNote from \"../components/findNote/FindNote\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { actionSetActiveNote } from \"../store/actions/notesActions\";\r\n\r\nimport {\r\n  actionStatisticsClearing,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionHideAnswer\r\n} from \"../store/actions/statisticsActions\";\r\n\r\nimport { actionNeedToWriteNote, actionSetMode } from \"../store/actions/applicationActions\";\r\n\r\nimport {\r\n  actionShowNotesOnThePiano,\r\n  actionUpdatePianoKeys\r\n} from \"../store/actions/pianoActions\";\r\n\r\nconst mapStateToProps = ({ statistics, notes, piano, application }) => ({\r\n  statistics,\r\n  note: notes.note,\r\n  sliceArr: piano.sliceArr,\r\n  playNote: application.playNote,\r\n  needToWriteNote: application.needToWriteNote\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionStatisticsClearing,\r\n  actionSetActiveNote,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionNeedToWriteNote,\r\n  actionShowNotesOnThePiano,\r\n  actionHideAnswer,\r\n  actionSetMode,\r\n  actionUpdatePianoKeys\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FindNote);\r\n","import { SET_ACTIVE_NOTE } from \"../actionTypes\";\r\n\r\nexport const actionSetActiveNote = arr => ({\r\n  type: SET_ACTIVE_NOTE,\r\n  sliceArr: arr\r\n});\r\n","import React from \"react\";\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DictationPlayButtons = ({ playGuessedMelody, playWrittenMelody }) => {\r\n  return (\r\n    <ButtonsGroup cls=\"horizontal\">\r\n      <Button onClick={playGuessedMelody}>Играть угадываемую мелодию</Button>\r\n      <Button onClick={playWrittenMelody}>Играть написанную мелодию</Button>\r\n    </ButtonsGroup>\r\n  );\r\n};\r\n\r\nDictationPlayButtons.propTypes = {\r\n  playGuessedMelody: PropTypes.func.isRequired,\r\n  playWrittenMelody: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DictationPlayButtons;\r\n","import React from \"react\";\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst DictationOptionsButtons = ({\r\n  modeWrite,\r\n  changeMode,\r\n  clearButtonHandler,\r\n  checkAnswerHandler,\r\n  sequenceOfWrittenMelody,\r\n  amountOfNotes,\r\n  answerGiven,\r\n  nextButtonHandler,\r\n  settingsButtonHandler\r\n}) => {\r\n  const access = amountOfNotes === sequenceOfWrittenMelody.length && !answerGiven;\r\n\r\n  const clickHandlerNextPlayButton = () => {\r\n    changeMode();\r\n    if (answerGiven) {\r\n      nextButtonHandler();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dictation-options-buttons\">\r\n      <ButtonsGroup cls=\"horizontal\">\r\n        <Button\r\n          onClick={clickHandlerNextPlayButton}\r\n          cls={modeWrite ? \"info-outline\" : \"info active\"}\r\n          disabled={modeWrite ? false : true}\r\n        >\r\n          {answerGiven ? \"Далее\" : \"Играть\"}\r\n        </Button>\r\n        {answerGiven ? null : (\r\n          <Button\r\n            onClick={changeMode}\r\n            cls={modeWrite ? \"info active\" : \"info-outline\"}\r\n            disabled={modeWrite ? true : false}\r\n          >\r\n            Писать\r\n          </Button>\r\n        )}\r\n      </ButtonsGroup>\r\n      <ButtonsGroup cls=\"horizontal\">\r\n        <Button onClick={clearButtonHandler}>Стереть</Button>\r\n        <Button\r\n          onClick={checkAnswerHandler}\r\n          cls={access ? \"danger\" : \"danger-outline\"}\r\n          disabled={!access}\r\n        >\r\n          Проверить\r\n        </Button>\r\n      </ButtonsGroup>\r\n      <Button cls=\"primary\" onClick={settingsButtonHandler}>\r\n        Настроки\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DictationOptionsButtons;\r\n\r\nDictationOptionsButtons.propTypes = {\r\n  modeWrite: PropTypes.bool.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  nextButtonHandler: PropTypes.func.isRequired,\r\n  clearButtonHandler: PropTypes.func.isRequired,\r\n  checkAnswerHandler: PropTypes.func.isRequired,\r\n  settingsButtonHandler: PropTypes.func.isRequired,\r\n  sequenceOfWrittenMelody: PropTypes.arrayOf(PropTypes.object),\r\n  amountOfNotes: PropTypes.number.isRequired,\r\n  answerGiven: PropTypes.bool.isRequired\r\n};\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DictationOutputElement = ({\r\n  elem,\r\n  index,\r\n  rightAnswer,\r\n  answerGiven,\r\n  rightElem\r\n}) => {\r\n  const cls = answerGiven ? (rightAnswer ? \"right\" : \"wrong\") : \"\";\r\n\r\n  const rightElemJSX = answerGiven ? (\r\n    rightAnswer ? null : (\r\n      <span className=\"right\">\r\n        &nbsp;\r\n        {rightElem ? `${rightElem.octaveName} - ${rightElem.fullName}` : \" ?\"}\r\n      </span>\r\n    )\r\n  ) : null;\r\n\r\n  return (\r\n    <p className=\"dictation-output-element\">\r\n      <span className=\"index-output-element\">{`${index + 1} нота:`}</span>&nbsp;\r\n      <span className={cls}>\r\n        {elem ? `${elem.octaveName} - ${elem.fullName}` : \" ?\"}\r\n      </span>\r\n      {rightElemJSX}\r\n    </p>\r\n  );\r\n};\r\n\r\nDictationOutputElement.propTypes = {\r\n  elem: PropTypes.object,\r\n  index: PropTypes.number.isRequired,\r\n  rightAnswer: PropTypes.bool,\r\n  answerGiven: PropTypes.bool.isRequired,\r\n  rightElem: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DictationOutputElement;\r\n","import React from \"react\";\r\nimport DictationOutputElement from \"./DictationOutputElement\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DuctationOutput = ({\r\n  amountOfNotes,\r\n  sequenceOfMelody,\r\n  sequenceOfWrittenMelody,\r\n  answerGiven,\r\n  answers\r\n}) => {\r\n  let dictationOutputBody = [];\r\n\r\n  for (let i = 0; i < amountOfNotes; i++) {\r\n    const elem = sequenceOfWrittenMelody[i];\r\n    const rightElem = sequenceOfMelody[i];\r\n    const elementJSX = (\r\n      <DictationOutputElement\r\n        elem={elem}\r\n        index={i}\r\n        answerGiven={answerGiven}\r\n        rightAnswer={answers[i]}\r\n        rightElem={rightElem}\r\n        key={i}\r\n      />\r\n    );\r\n\r\n    dictationOutputBody.push(elementJSX);\r\n  }\r\n  return (\r\n    <div className=\"dictation-output\">\r\n      <h3>Список отгаданных нот:</h3>\r\n      {dictationOutputBody}\r\n    </div>\r\n  );\r\n};\r\n\r\nDuctationOutput.propTypes = {\r\n  amountOfNotes: PropTypes.number.isRequired,\r\n  needToWriteNote: PropTypes.bool.isRequired,\r\n  sequenceOfMelody: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  sequenceOfWrittenMelody: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  answers: PropTypes.arrayOf(PropTypes.bool).isRequired,\r\n  answerGiven: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DuctationOutput;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./modalWindow.css\";\r\nimport ButtonsGroup from \"../buttonsGroup/ButtonsGroup\";\r\nimport Button from \"../button/Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default class ModalWindow extends Component {\r\n  state = {\r\n    opacity: 0\r\n  };\r\n\r\n  modal = document.createElement(\"div\");\r\n\r\n  componentDidMount() {\r\n    this.modal.className = \"modal-wrap\";\r\n    document.body.appendChild(this.modal);\r\n    document.body.style.overflow = \"hidden\";\r\n    setTimeout(() => {\r\n      this.setState({\r\n        opacity: 1\r\n      });\r\n    }, 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.modal);\r\n    document.body.style.overflow = \"auto\";\r\n  }\r\n\r\n  closeHandler = () => {\r\n    this.setState({\r\n      opacity: 0\r\n    });\r\n    setTimeout(() => {\r\n      this.props.close();\r\n    }, 100);\r\n  };\r\n\r\n  saveHandler = () => {\r\n    this.closeHandler();\r\n    this.props.saveButtonHandler();\r\n  };\r\n\r\n  cancelHandler = () => {\r\n    this.closeHandler();\r\n    this.props.cancelButtonHandler();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      saveButton,\r\n      saveButtonName,\r\n      cancelButton,\r\n      cancelButtonName\r\n    } = this.props;\r\n\r\n    return ReactDOM.createPortal(\r\n      <div className=\"modal-window\" style={{ opacity: this.state.opacity }}>\r\n        <span className=\"close\" onClick={this.closeHandler}>\r\n          &times;\r\n        </span>\r\n        {this.props.children}\r\n        <ButtonsGroup cls=\"flex\">\r\n          {saveButton ? (\r\n            <Button onClick={this.saveHandler} cls=\"info\">\r\n              {saveButtonName}\r\n            </Button>\r\n          ) : null}\r\n          {cancelButton ? (\r\n            <Button onClick={this.cancelHandler} cls=\"danger\">\r\n              {cancelButtonName}\r\n            </Button>\r\n          ) : null}\r\n        </ButtonsGroup>\r\n      </div>,\r\n      this.modal\r\n    );\r\n  }\r\n}\r\n\r\nModalWindow.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  saveButton: PropTypes.bool.isRequired,\r\n  saveButtonName: PropTypes.string,\r\n  cancelButton: PropTypes.bool.isRequired,\r\n  cancelButtonName: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n  saveButtonHandler: PropTypes.func,\r\n  cancelButtonHandler: PropTypes.func\r\n};\r\n","import React from \"react\";\r\nimport \"./select.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Select = ({ value, onChange, children }) => {\r\n\treturn <select className=\"select\" defaultValue={value} onChange={onChange}>\r\n\t\t{children}\r\n\t</select>;\r\n};\r\n\r\nSelect.propTypes = {\r\n\tvalue: PropTypes.number.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\tchildren: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Select;","import React from \"react\";\r\nimport Select from \"../select/Select\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst amountOfNotes = [3, 4, 5, 6, 7];\r\n\r\nconst amountOfNotesOptions = amountOfNotes.map(elem => (\r\n  <option value={elem} key={elem}>\r\n    {elem}\r\n  </option>\r\n));\r\n\r\nconst SelectAmountOfNotes = ({ value, onChange }) => {\r\n  return (\r\n    <Select onChange={onChange} value={value}>\r\n      {amountOfNotesOptions}\r\n    </Select>\r\n  );\r\n};\r\n\r\nSelectAmountOfNotes.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nconst modes = [\r\n  { modePlay: false, ru: \"Играть\" },\r\n  { modePlay: true, ru: \"Писать\" }\r\n];\r\n\r\nconst modesOptions = modes.map(elem => (\r\n  <option value={elem.modePlay} key={elem.ru}>\r\n    {elem.ru}\r\n  </option>\r\n));\r\n\r\nconst SelectModes = ({ value, onChange }) => {\r\n  return (\r\n    <Select onChange={onChange} value={value}>\r\n      {modesOptions}\r\n    </Select>\r\n  );\r\n};\r\n\r\nSelectModes.propTypes = {\r\n  value: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport { SelectAmountOfNotes, SelectModes };\r\n","import React, { Component } from \"react\";\r\nimport ModalWindow from \"../modalWindow/ModalWindow\";\r\nimport { SelectAmountOfNotes, SelectModes } from \"./selectComponents\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class DictationSettings extends Component {\r\n  state = {\r\n    amountOfNotes: 4,\r\n    defaultModeWrite: false,\r\n    modeWrite: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { amountOfNotes, defaultModeWrite } = this.props;\r\n    this.setState({\r\n      amountOfNotes,\r\n      defaultModeWrite\r\n    });\r\n  }\r\n\r\n  selectAmountOfNotesHandler = e => {\r\n    this.setState({\r\n      amountOfNotes: +e.target.value\r\n    });\r\n  };\r\n\r\n  selectModesHandler = e => {\r\n    let defaultModeWrite, modeWrite;\r\n    const value = e.target.value;\r\n\r\n    if (value === \"true\") {\r\n      defaultModeWrite = true;\r\n      modeWrite = true;\r\n    }\r\n    if (value === \"false\") {\r\n      defaultModeWrite = false;\r\n      modeWrite = false;\r\n    }\r\n\r\n    this.setState({\r\n      defaultModeWrite,\r\n      modeWrite\r\n    });\r\n  };\r\n\r\n  saveButtonHandler = () => {\r\n    this.props.actionChangeSettings(this.state);\r\n  };\r\n\r\n  cancelButtonHandler = () => {\r\n    this.setState({\r\n      amountOfNotes: this.props.amountOfNotes,\r\n      defaultModeWrite: this.props.defaultModeWrite\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      settingsButtonHandler,\r\n      amountOfNotes,\r\n      defaultModeWrite\r\n    } = this.props;\r\n\r\n    const {\r\n      selectAmountOfNotesHandler,\r\n      selectModesHandler,\r\n      saveButtonHandler,\r\n      cancelButtonHandler\r\n    } = this;\r\n    return (\r\n      <ModalWindow\r\n        close={settingsButtonHandler}\r\n        saveButton={true}\r\n        saveButtonName={\"Сохранить\"}\r\n        cancelButton={true}\r\n        cancelButtonName={\"Отменить\"}\r\n        saveButtonHandler={saveButtonHandler}\r\n        cancelButtonHandler={cancelButtonHandler}\r\n      >\r\n        <React.Fragment>\r\n          <h3>Настройки диктанта</h3>\r\n          <h4>Количество нот:</h4>\r\n          <SelectAmountOfNotes\r\n            value={amountOfNotes}\r\n            onChange={selectAmountOfNotesHandler}\r\n          />\r\n          <h4>Режим по умолчанию:</h4>\r\n          <SelectModes value={defaultModeWrite} onChange={selectModesHandler} />\r\n        </React.Fragment>\r\n      </ModalWindow>\r\n    );\r\n  }\r\n}\r\n\r\nDictationSettings.propTypes = {\r\n  settingsButtonHandler: PropTypes.func.isRequired,\r\n  actionChangeSettings: PropTypes.func.isRequired,\r\n  amountOfNotes: PropTypes.number.isRequired,\r\n  defaultModeWrite: PropTypes.bool.isRequired\r\n};\r\n\r\n","import DictationSettings from \"../components/dictation/DictationSettings\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { actionChangeSettings } from \"../store/actions/dictationActions\";\r\n\r\nconst mapStateToProps = ({ dictation }) => ({\r\n  amountOfNotes: dictation.amountOfNotes,\r\n  defaultModeWrite: dictation.defaultModeWrite\r\n});\r\n\r\nconst mapDispatchToProps = { actionChangeSettings };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DictationSettings);\r\n","import {\r\n  GET_NEW_MELODY,\r\n  CHANGE_MODE,\r\n  ADD_NOTE_TO_ANSWER_ARRAY,\r\n  POP_LAST_ELEM_FROM_ANSWER_ARRAY,\r\n  WRITE_ANSWERS,\r\n  CLEAR_WRITTEN_MELODY,\r\n  CHANGE_SETTINGS,\r\n} from \"../actionTypes\";\r\n\r\nexport const actionGetNewMelody = (sliceArr) => ({\r\n  type: GET_NEW_MELODY,\r\n  sliceArr,\r\n});\r\n\r\nexport const actionChangeMode = (payload) => ({\r\n  type: CHANGE_MODE,\r\n  payload,\r\n});\r\n\r\nexport const actionAddNoteToAnswerArray = (payload) => ({\r\n  type: ADD_NOTE_TO_ANSWER_ARRAY,\r\n  payload,\r\n});\r\n\r\nexport const actionPopLastElemFromAnswerArray = () => ({\r\n  type: POP_LAST_ELEM_FROM_ANSWER_ARRAY,\r\n});\r\n\r\nexport const actionWriteAnswers = (arr) => ({\r\n  type: WRITE_ANSWERS,\r\n  payload: arr,\r\n});\r\n\r\nexport const actionClearWrittenMelody = () => ({\r\n  type: CLEAR_WRITTEN_MELODY,\r\n});\r\n\r\nexport const actionChangeSettings = (settingsObj) => ({\r\n  type: CHANGE_SETTINGS,\r\n  payload: settingsObj,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport \"./dictation.css\";\r\n\r\nimport DictationPlayButtons from \"./DictationPlayButtons\";\r\nimport DictationOptionsButtons from \"./DictationOptionsButtons\";\r\nimport DuctationOutput from \"./DuctationOutput\";\r\nimport DictationSettings from \"../../containers/dictationSettingsContainer\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Dictation extends Component {\r\n  state = {\r\n    modalIsOpen: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { defaultModeWrite } = this.props.dictation;\r\n    this.props.actionWritePlayNote(null, false);\r\n\r\n    this.changeMode(null, defaultModeWrite);\r\n\r\n    if (this.props.needToWriteNote !== defaultModeWrite) {\r\n      this.props.actionNeedToWriteNote(defaultModeWrite);\r\n    }\r\n\r\n    this.setNewMelody();\r\n    this.props.actionInitDictation(true);\r\n    this.props.actionSetMode({ mode: \"Музыкальный диктант\", stat: true });\r\n    this.props.actionUpdatePianoKeys();\r\n    this.props.actionClearWrittenMelody();\r\n    this.clearAnswers();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.actionInitDictation(false);\r\n    this.clearAnswers();\r\n    this.props.actionStatisticsClearing();\r\n    this.props.actionClearWrittenMelody();\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const { sequenceOfWrittenMelody } = this.props.dictation;\r\n    const { amountOfNotes } = this.props.dictation;\r\n    const { playNote } = this.props;\r\n\r\n    if (sequenceOfWrittenMelody.length < amountOfNotes && playNote) {\r\n      if (\r\n        (prevState.playNote && playNote.id !== prevState.playNote.id) ||\r\n        (prevState.playNote === null && playNote !== null)\r\n      ) {\r\n        this.props.actionAddNoteToAnswerArray(playNote);\r\n      }\r\n    }\r\n  }\r\n\r\n  setNewMelody = () => {\r\n    this.props.actionGetNewMelody(this.props.sliceArr);\r\n  };\r\n\r\n  clearAnswers = () => {\r\n    this.props.actionWriteAnswers([]);\r\n  };\r\n\r\n  playGuessedMelody = () => {\r\n    const sequence = this.props.dictation.sequenceOfMelody.map(\r\n      elem => elem.key\r\n    );\r\n\r\n    this.playMelody(sequence);\r\n  };\r\n\r\n  playWrittenMelody = () => {\r\n    const sequence = this.getKeysArrayOfMeloday(\r\n      this.props.dictation.sequenceOfWrittenMelody\r\n    );\r\n\r\n    this.playMelody(sequence);\r\n  };\r\n\r\n  playMelody = sequence => {\r\n    const onlyPlay = true;\r\n    for (let i = 0; i < sequence.length; i++) {\r\n      if (sequence[i]) {\r\n        setTimeout(() => {\r\n          this.props.play(sequence[i], onlyPlay);\r\n        }, 800 * i);\r\n      }\r\n    }\r\n  };\r\n\r\n  changeMode = (e, modeWrite) => {\r\n    modeWrite =\r\n      typeof modeWrite === \"boolean\"\r\n        ? modeWrite\r\n        : !this.props.dictation.modeWrite;\r\n\r\n    this.props.actionChangeMode(modeWrite);\r\n\r\n    this.props.actionNeedToWriteNote(modeWrite);\r\n  };\r\n\r\n  clearButtonHandler = () => {\r\n    if (this.props.dictation.sequenceOfWrittenMelody.length > 0) {\r\n      this.props.actionPopLastElemFromAnswerArray();\r\n    }\r\n  };\r\n\r\n  checkAnswerHandler = () => {\r\n    const arrKeysArrayOfMeloday = this.getKeysArrayOfMeloday(\r\n      this.props.dictation.sequenceOfMelody\r\n    );\r\n\r\n    const arrKeysArrayOfWrittenMeloday = this.getKeysArrayOfMeloday(\r\n      this.props.dictation.sequenceOfWrittenMelody\r\n    );\r\n\r\n    if (arrKeysArrayOfMeloday.length === arrKeysArrayOfWrittenMeloday.length) {\r\n      const checkAnswers = this.getArrayOfEqualsOfAnswers(\r\n        arrKeysArrayOfMeloday,\r\n        arrKeysArrayOfWrittenMeloday\r\n      );\r\n\r\n      this.changeStat(checkAnswers);\r\n      this.props.actionWriteAnswers(checkAnswers);\r\n    }\r\n  };\r\n\r\n  getKeysArrayOfMeloday = sequence => {\r\n    const arr = sequence.map(elem => elem.key);\r\n\r\n    return arr;\r\n  };\r\n\r\n  getArrayOfEqualsOfAnswers = (arr1, arr2) => {\r\n    const checkAnswers = [];\r\n    for (let i = 0; i < arr1.length; i++) {\r\n      checkAnswers.push(arr1[i] === arr2[i]);\r\n    }\r\n\r\n    return checkAnswers;\r\n  };\r\n\r\n  changeStat = arr => {\r\n    if (arr.indexOf(false) === -1) {\r\n      this.props.actionIncrementRightAnswers();\r\n    } else {\r\n      this.props.actionIncrementAmountOfAnswers();\r\n    }\r\n  };\r\n\r\n  nextButtonHandler = () => {\r\n    this.setNewMelody();\r\n\r\n    this.clearAnswers();\r\n\r\n    this.props.actionClearWrittenMelody();\r\n\r\n    this.props.actionHideAnswer();\r\n  };\r\n\r\n  settingsButtonHandler = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        modalIsOpen: !prevState.modalIsOpen\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const modeWrite = this.props.dictation.modeWrite || false;\r\n\r\n    const needToWriteNote = this.props.needToWriteNote;\r\n\r\n    const {\r\n      amountOfNotes,\r\n      sequenceOfMelody,\r\n      sequenceOfWrittenMelody,\r\n      answerGiven,\r\n      answers\r\n    } = this.props.dictation;\r\n\r\n    const { nextButtonHandler, settingsButtonHandler } = this;\r\n\r\n    return (\r\n      <div>\r\n        <DictationPlayButtons\r\n          playGuessedMelody={this.playGuessedMelody}\r\n          playWrittenMelody={this.playWrittenMelody}\r\n        />\r\n        <DictationOptionsButtons\r\n          modeWrite={modeWrite}\r\n          changeMode={this.changeMode}\r\n          clearButtonHandler={this.clearButtonHandler}\r\n          checkAnswerHandler={this.checkAnswerHandler}\r\n          sequenceOfWrittenMelody={sequenceOfWrittenMelody}\r\n          amountOfNotes={amountOfNotes}\r\n          answerGiven={answerGiven}\r\n          nextButtonHandler={nextButtonHandler}\r\n          settingsButtonHandler={settingsButtonHandler}\r\n        />\r\n        <DuctationOutput\r\n          amountOfNotes={amountOfNotes}\r\n          needToWriteNote={needToWriteNote}\r\n          sequenceOfMelody={sequenceOfMelody}\r\n          sequenceOfWrittenMelody={sequenceOfWrittenMelody}\r\n          answerGiven={answerGiven}\r\n          answers={answers}\r\n        />\r\n\r\n        {this.state.modalIsOpen ? (\r\n          <DictationSettings settingsButtonHandler={settingsButtonHandler} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDictation.propTypes = {\r\n  sliceArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  play: PropTypes.func.isRequired,\r\n  needToWriteNote: PropTypes.bool.isRequired,\r\n  playNote: PropTypes.object,\r\n  actionGetNewMelody: PropTypes.func.isRequired,\r\n  actionChangeMode: PropTypes.func.isRequired,\r\n  actionNeedToWriteNote: PropTypes.func.isRequired,\r\n  actionInitDictation: PropTypes.func.isRequired,\r\n  actionAddNoteToAnswerArray: PropTypes.func.isRequired,\r\n  actionWritePlayNote: PropTypes.func.isRequired,\r\n  actionPopLastElemFromAnswerArray: PropTypes.func.isRequired,\r\n  actionWriteAnswers: PropTypes.func.isRequired,\r\n  actionStatisticsClearing: PropTypes.func.isRequired,\r\n  actionIncrementRightAnswers: PropTypes.func.isRequired,\r\n  actionIncrementAmountOfAnswers: PropTypes.func.isRequired,\r\n  actionClearWrittenMelody: PropTypes.func.isRequired,\r\n  actionHideAnswer: PropTypes.func.isRequired,\r\n  actionSetMode: PropTypes.func.isRequired,\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired,\r\n  dictation: PropTypes.shape({\r\n    amountOfNotes: PropTypes.number.isRequired,\r\n    sequenceOfMelody: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    sequenceOfWrittenMelody: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    defaultModeWrite: PropTypes.bool.isRequired,\r\n    answers: PropTypes.array.isRequired,\r\n    answerGiven: PropTypes.bool.isRequired,\r\n    modeWrite: PropTypes.bool.isRequired\r\n  }).isRequired\r\n};\r\n","import Dictation from \"../components/dictation/Dictation\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  actionUpdatePianoKeys\r\n} from \"../store/actions/pianoActions\";\r\n\r\nimport {\r\n  actionGetNewMelody,\r\n  actionChangeMode,\r\n  actionAddNoteToAnswerArray,\r\n  actionPopLastElemFromAnswerArray,\r\n  actionWriteAnswers,\r\n  actionClearWrittenMelody\r\n} from \"../store/actions/dictationActions\";\r\n\r\nimport {\r\n  actionStatisticsClearing,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionHideAnswer\r\n} from \"../store/actions/statisticsActions\";\r\n\r\nimport {\r\n  actionNeedToWriteNote,\r\n  actionInitDictation,\r\n  actionWritePlayNote,\r\n  actionSetMode\r\n} from \"../store/actions/applicationActions\";\r\n\r\nconst mapStateToProps = ({ piano, dictation, application }) => ({\r\n  sliceArr: piano.sliceArr,\r\n  dictation,\r\n  needToWriteNote: application.needToWriteNote,\r\n  playNote: application.playNote\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionGetNewMelody,\r\n  actionChangeMode,\r\n  actionNeedToWriteNote,\r\n  actionInitDictation,\r\n  actionAddNoteToAnswerArray,\r\n  actionWritePlayNote,\r\n  actionPopLastElemFromAnswerArray,\r\n  actionWriteAnswers,\r\n  actionStatisticsClearing,\r\n  actionIncrementRightAnswers,\r\n  actionIncrementAmountOfAnswers,\r\n  actionClearWrittenMelody,\r\n  actionHideAnswer,\r\n  actionSetMode,\r\n  actionUpdatePianoKeys\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dictation);\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FreeMode = ({ actionSetMode, actionUpdatePianoKeys }) => {\r\n  actionSetMode({ mode: \"Свободная игра\", stat: false });\r\n  actionUpdatePianoKeys();\r\n  return <div className=\"free-mode\"></div>;\r\n};\r\n\r\nFreeMode.propTypes = {\r\n  actionSetMode: PropTypes.func.isRequired,\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FreeMode;\r\n","import FreeMode from \"../components/freeMode/FreeMode\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n\tactionSetMode\r\n} from \"../store/actions/applicationActions\";\r\n\r\nimport {\r\n\tactionUpdatePianoKeys\r\n} from \"../store/actions/pianoActions\";\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = {\r\n\tactionSetMode,\r\n\tactionUpdatePianoKeys\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FreeMode);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OptionFromSelectRanges = ({ index, fullName, disabled }) => {\r\n  return (\r\n    <option disabled={disabled} value={index}>\r\n      {fullName}\r\n    </option>\r\n  );\r\n};\r\n\r\nOptionFromSelectRanges.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  fullName: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default OptionFromSelectRanges;\r\n","import React from \"react\";\r\nimport OptionFromSelectRanges from \"./OptionFromSelectRanges\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectBody = ({\r\n  baseArrOfNotes,\r\n  firstBorder,\r\n  secondBorder,\r\n  nameOfSelect,\r\n  minAmountOfNotes\r\n}) => {\r\n  const body = baseArrOfNotes.map(({ fullName, key, index }) => {\r\n    let disabled = false;\r\n\r\n    if (nameOfSelect === \"firstBorder\") {\r\n      if (key > secondBorder.key - minAmountOfNotes) {\r\n        disabled = true;\r\n      }\r\n    } else if (key < firstBorder.key + minAmountOfNotes) {\r\n      disabled = true;\r\n    }\r\n\r\n    return (\r\n      <OptionFromSelectRanges\r\n        disabled={disabled}\r\n        fullName={fullName}\r\n        index={index}\r\n        key={key}\r\n      />\r\n    );\r\n  });\r\n  return body;\r\n};\r\n\r\nSelectBody.propType = {\r\n  minAmountOfNotes: PropTypes.number.isRequired,\r\n  firstBorder: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n    key: PropTypes.number.isRequired\r\n  }),\r\n  secondBorder: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n    key: PropTypes.number.isRequired\r\n  }),\r\n  nameOfSelect: PropTypes.string.isRequired,\r\n  baseArrOfNotes: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\n\r\nexport default SelectBody;","let baseArrOfNotes = [];\r\n\r\nconst BASE_NAMES = [\r\n  \"A\",\r\n  \"A#\",\r\n  \"B\",\r\n  \"C\",\r\n  \"C#\",\r\n  \"D\",\r\n  \"D#\",\r\n  \"E\",\r\n  \"F\",\r\n  \"F#\",\r\n  \"G\",\r\n  \"G#\"\r\n];\r\n\r\nconst NAMES_OF_OCTAVES = {\r\n  0: \"Субконтроктава\",\r\n  1: \"Контроктава\",\r\n  2: \"Большая октава\",\r\n  3: \"Малая октава\",\r\n  4: \"Первая октава\",\r\n  5: \"Вторая октава\",\r\n  6: \"Третья октава\",\r\n  7: \"Четвертая октава\",\r\n  8: \"Пятая октава\"\r\n};\r\n\r\nconst BASE_START_NOTE = 21;\r\nconst BASE_FINISH_NOTE = 108;\r\n\r\nlet octaveNumber = 0;\r\n\r\nfor (let i = 0; i <= BASE_FINISH_NOTE - BASE_START_NOTE; i++) {\r\n  const name = BASE_NAMES[i % BASE_NAMES.length];\r\n\r\n  if (name === \"C\") {\r\n    octaveNumber++;\r\n  }\r\n  baseArrOfNotes.push({\r\n    index: i,\r\n    key: i + BASE_START_NOTE,\r\n    name,\r\n    fullName: name + octaveNumber,\r\n    octaveName: NAMES_OF_OCTAVES[octaveNumber]\r\n  });\r\n}\r\n\r\nfunction getBaseArrayOfNotes(\r\n  start = 0,\r\n  finish = BASE_FINISH_NOTE - BASE_START_NOTE\r\n) {\r\n  return [...baseArrOfNotes].slice(start, finish + 1);\r\n}\r\n\r\nfunction getFullArrayAndMapIndexes(arr) {\r\n  const mapIndex = {};\r\n\r\n  const arrOfNotes = [];\r\n\r\n  for (let k = 0; k < arr.length; k++) {\r\n    const obj = arr[k];\r\n    const nextObj = arr[k + 1];\r\n    let i = arrOfNotes.length;\r\n    let section = [];\r\n\r\n    section.push(addNewFields(obj));\r\n\r\n    mapIndex[arr[k].key] = {\r\n      i,\r\n      j: 0\r\n    };\r\n\r\n    if (nextObj && nextObj.name.includes(\"#\")) {\r\n      section.push(addNewFields(nextObj));\r\n      k++;\r\n      mapIndex[arr[k].key] = {\r\n        i,\r\n        j: 1\r\n      };\r\n    }\r\n\r\n    arrOfNotes.push(section);\r\n  }\r\n\r\n  return { mapIndex, arrOfNotes };\r\n}\r\n\r\nfunction addNewFields(obj) {\r\n  return { ...obj, active: false, wrong: false, right: false };\r\n}\r\n\r\nconst getIndexes = ({ key, mapIndex }) => {\r\n  const indexesOfNote = mapIndex[key];\r\n  const i = indexesOfNote.i;\r\n  const j = indexesOfNote.j;\r\n  return { i, j };\r\n};\r\n\r\nwindow.getIndexes = getIndexes;\r\n\r\nconst setVisualEffect = ({ arrOfNotes, sequence, type, active, mapIndex }) => {\r\n  let arr = [...arrOfNotes];\r\n\r\n  sequence.forEach(element => {\r\n    const { i, j } = getIndexes({ key: element, mapIndex });\r\n    if (active) {\r\n      arr[i][j][type] = true;\r\n    } else {\r\n      if (!type) {\r\n        arr[i][j].right = false;\r\n        arr[i][j].wrong = false;\r\n      } else {\r\n        arr[i][j][type] = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  return arr;\r\n};\r\n\r\nexport {\r\n  getBaseArrayOfNotes,\r\n  getFullArrayAndMapIndexes,\r\n  getIndexes,\r\n  setVisualEffect\r\n};\r\n","import React from \"react\";\r\nimport SelectBody from \"./SelectBody\";\r\n\r\nimport Select from \"../select/Select\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectOfRange = ({\r\n  nameOfSelect,\r\n  baseArrOfNotes,\r\n  minAmountOfNotes,\r\n  actionSetBordersOfRange,\r\n  firstBorder,\r\n  secondBorder\r\n}) => {\r\n  const selectChangeHandler = (e, field) => {\r\n    let index = +e.target.value;\r\n    const key = baseArrOfNotes[index].key;\r\n\r\n    if (field === \"firstBorder\") {\r\n      firstBorder = { index, key };\r\n    } else {\r\n      secondBorder = { index, key };\r\n    }\r\n\r\n    actionSetBordersOfRange([firstBorder, secondBorder]);\r\n  };\r\n\r\n  const valueOfSelect =\r\n    nameOfSelect === \"firstBorder\" ? firstBorder.index : secondBorder.index;\r\n\r\n  return (\r\n    <Select\r\n      value={valueOfSelect}\r\n      onChange={e => {\r\n        selectChangeHandler(e, nameOfSelect);\r\n      }}\r\n    >\r\n      <SelectBody\r\n        minAmountOfNotes={minAmountOfNotes}\r\n        firstBorder={firstBorder}\r\n        secondBorder={secondBorder}\r\n        nameOfSelect={nameOfSelect}\r\n        baseArrOfNotes={baseArrOfNotes}\r\n      />\r\n    </Select>\r\n  );\r\n};\r\n\r\nSelectOfRange.propTypes = {\r\n  firstBorder: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n    key: PropTypes.number.isRequired\r\n  }),\r\n  secondBorder: PropTypes.shape({\r\n    index: PropTypes.number.isRequired,\r\n    key: PropTypes.number.isRequired\r\n  }),\r\n  nameOfSelect: PropTypes.string.isRequired,\r\n  minAmountOfNotes: PropTypes.number.isRequired,\r\n  baseArrOfNotes: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n  actionSetBordersOfRange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SelectOfRange;\r\n","import React from \"react\";\r\nimport SelectOfRange from \"./SelectOfRange\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../button/Button\";\r\n\r\nconst ChangeRangeOfNotes = ({\r\n  actionUpdatePianoKeys,\r\n  actionSetBordersOfRange,\r\n  piano: { firstBorder, secondBorder, baseArrOfNotes, minAmountOfNotes }\r\n}) => {\r\n  const clickHandler = () => {\r\n    actionUpdatePianoKeys();\r\n  };\r\n\r\n  return (\r\n    <div className=\"changeRangeOfNotes\">\r\n      <h3>Изменить диапазон:</h3>\r\n      <SelectOfRange\r\n        firstBorder={firstBorder}\r\n        secondBorder={secondBorder}\r\n        nameOfSelect=\"firstBorder\"\r\n        actionSetBordersOfRange={actionSetBordersOfRange}\r\n        baseArrOfNotes={baseArrOfNotes}\r\n        minAmountOfNotes={minAmountOfNotes}\r\n      />\r\n      <SelectOfRange\r\n        firstBorder={firstBorder}\r\n        secondBorder={secondBorder}\r\n        nameOfSelect=\"secondBorder\"\r\n        actionSetBordersOfRange={actionSetBordersOfRange}\r\n        baseArrOfNotes={baseArrOfNotes}\r\n        minAmountOfNotes={minAmountOfNotes}\r\n      />\r\n\r\n      <Button onClick={clickHandler}>Выбрать диапазон</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nChangeRangeOfNotes.propTypes = {\r\n  actionUpdatePianoKeys: PropTypes.func.isRequired,\r\n  actionSetBordersOfRange: PropTypes.func.isRequired,\r\n  piano: PropTypes.object\r\n};\r\n\r\nexport default ChangeRangeOfNotes;\r\n","import ChangeRangeOfNotes from \"../components/changeRangeOfNotes/ChangeRangeOfNotes\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  actionSetBordersOfRange,\r\n  actionUpdatePianoKeys\r\n} from \"../store/actions/pianoActions\";\r\n\r\nconst mapStateToProps = ({ piano }) => ({\r\n  piano\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionSetBordersOfRange,\r\n  actionUpdatePianoKeys\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ChangeRangeOfNotes);\r\n","import React from \"react\";\r\nimport ModalWindow from \"../modalWindow/ModalWindow\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ClearSettingsModalBody = ({ close, saveButtonHandler\r\n  , cancelButtonHandler }) => {\r\n\r\n  return (\r\n    <ModalWindow close={close} saveButton={true}\r\n      saveButtonName={\"Сохранить\"}\r\n      cancelButton={true}\r\n      cancelButtonName={\"Отменить\"}\r\n      saveButtonHandler={saveButtonHandler}\r\n      cancelButtonHandler={cancelButtonHandler}>\r\n      <h3>Сбросить все настройки</h3>\r\n    </ModalWindow>\r\n  );\r\n};\r\n\r\nClearSettingsModalBody.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  saveButtonHandler: PropTypes.func.isRequired,\r\n  cancelButtonHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ClearSettingsModalBody;","import React, { Component } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport ClearSettingsModalBody from \"./ClearSettingsModalBody\";\r\n\r\nexport default class ClearSettings extends Component {\r\n\tstate = {\r\n\t\tmodalIsOpen: false\r\n\t}\r\n\r\n\tmodalOpenerHandler = () => {\r\n\t\tthis.setState(prev => ({\r\n\t\t\tmodalIsOpen: !prev.modalIsOpen\r\n\t\t}));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { modalIsOpen } = this.state;\r\n\t\tconst { modalOpenerHandler } = this;\r\n\t\treturn (\r\n\t\t\t<div className=\"changeRangeOfNotes\">\r\n\t\t\t\t<h3>Сбросить настройки:</h3>\r\n\t\t\t\t<Button onClick={modalOpenerHandler}>\r\n\t\t\t\t\tСбросить все настройки\r\n\t\t\t\t</Button>\r\n\t\t\t\t{modalIsOpen ? <ClearSettingsModalBody close={this.modalOpenerHandler} /> : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport ChangeRangeOfNotes from \"../../containers/changeRangeOfNotesContainer\";\r\nimport \"./settings.css\";\r\nimport ClearSettings from \"../clearSettings/ClearSettings\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Settings extends Component {\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst { actionUpdatePianoKeys, actionSetMode } = this.props;\r\n\t\tactionUpdatePianoKeys();\r\n\t\tactionSetMode({ mode: \"Настройки\", stat: false });\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"settings\">\r\n\t\t\t\t<ChangeRangeOfNotes />\r\n\t\t\t\t<ClearSettings />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSettings.propTypes = {\r\n\tactionUpdatePianoKeys: PropTypes.func.isRequired,\r\n\tactionSetMode: PropTypes.func.isRequired\r\n};\r\n","import Settings from \"../components/settings/Settings\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n\tactionSetMode\r\n} from \"../store/actions/applicationActions\";\r\n\r\nimport {\r\n\tactionUpdatePianoKeys\r\n} from \"../store/actions/pianoActions\";\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = {\r\n\tactionSetMode,\r\n\tactionUpdatePianoKeys\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport MIDISounds from \"midi-sounds-react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Menu from \"./containers/menuContainer\";\r\nimport Header from \"./containers/headerContainer\";\r\nimport Piano from \"./containers/pianoContainer\";\r\n\r\nimport Intervals from \"./components/intervals/Intervals\";\r\nimport ActivateMidiContainer from \"./containers/activateMidiContainer\";\r\nimport FindNote from \"./containers/findNoteContainer\";\r\nimport Dictation from \"./containers/dictationContainter\";\r\nimport FreeMode from \"./containers/freeModeContainer\";\r\nimport Settings from \"./containers/settingsContainer\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    var bpm = 80;\r\n    var N = (4 * 60) / bpm;\r\n    var duration = N / 4;\r\n    this.setState({ duration });\r\n    // this.setState(this.state);\r\n    // this.midiSounds.playChordNow(1, [60], 1);\r\n    this.midiSounds.setEchoLevel(0);\r\n\r\n    document.getElementById(\"root\").addEventListener(\"click\", () => {\r\n      if (this.props.menuIsOpen) {\r\n        this.props.actionMenuAction(false);\r\n      }\r\n    });\r\n\r\n    document.body.addEventListener(\"keyup\", e => {\r\n      if (e.keyCode === 27) {\r\n        this.props.actionMenuAction();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  play = (key, onlyPlay) => {\r\n    const { duration } = this.state;\r\n    this.midiSounds.playChordNow(1, [key], duration);\r\n\r\n    if (!onlyPlay) {\r\n      if (this.props.needToWriteNote) {\r\n        const note = this.props.sliceArr.find(elem => elem.key === key);\r\n\r\n        if (this.props.modeDictation) {\r\n          this.props.actionWritePlayNote(note, true);\r\n        } else {\r\n          this.props.actionWritePlayNote(note, false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Menu />\r\n        <Header />\r\n        <Piano play={this.play} />\r\n\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => <FreeMode />}\r\n          />\r\n          <Route\r\n            path=\"/intervals\"\r\n            render={() => <Intervals play={this.play} />}\r\n          />\r\n          <Route\r\n            path=\"/find-note\"\r\n            render={() => <FindNote play={this.play} />}\r\n          />\r\n          <Route\r\n            path=\"/dictation\"\r\n            render={() => <Dictation play={this.play} />}\r\n          />\r\n          <Route path=\"/options\" render={() => <Settings />} />\r\n        </Switch>\r\n\r\n        <ActivateMidiContainer play={this.play} />\r\n        <div className=\"midiComponent\" style={{ display: \"none\" }}>\r\n          <MIDISounds\r\n            ref={ref => (this.midiSounds = ref)}\r\n            appElementName=\"root\"\r\n            instruments={[1]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from \"../App\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  actionMenuAction,\r\n  actionWritePlayNote\r\n} from \"../store/actions/applicationActions\";\r\n\r\nconst mapStateToProps = ({ application, piano }) => ({\r\n  menuIsOpen: application.menuIsOpen,\r\n  note: application.note,\r\n  needToWriteNote: application.needToWriteNote,\r\n  modeDictation: application.modeDictation,\r\n  sliceArr: piano.sliceArr,\r\n  mapIndex: piano.mapIndex\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  actionMenuAction,\r\n  actionWritePlayNote\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import {\r\n  MENU_ACTION,\r\n  NEED_TO_WRITE_NOTE,\r\n  WRITE_PLAY_NOTE,\r\n  INIT_DICTATION,\r\n  SET_MODE\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  menuIsOpen: false,\r\n  playNote: null,\r\n  needToWriteNote: false,\r\n  modeDictation: false,\r\n  mode: \"\",\r\n  stat: true\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MENU_ACTION: {\r\n      let { menuIsOpen } = state;\r\n      let { isOpen } = action.payload;\r\n\r\n      if (typeof isOpen === \"boolean\") {\r\n        menuIsOpen = isOpen;\r\n      } else {\r\n        menuIsOpen = !menuIsOpen;\r\n      }\r\n\r\n      return { ...state, menuIsOpen };\r\n    }\r\n\r\n    case NEED_TO_WRITE_NOTE: {\r\n      return {\r\n        ...state,\r\n        needToWriteNote: action.payload || false,\r\n        playNote: null\r\n      };\r\n    }\r\n\r\n    case WRITE_PLAY_NOTE: {\r\n      return {\r\n        ...state,\r\n        playNote: { ...action.payload },\r\n        needToWriteNote: action.needToWriteNote\r\n      };\r\n    }\r\n\r\n    case INIT_DICTATION: {\r\n      return { ...state, modeDictation: action.payload };\r\n    }\r\n\r\n    case SET_MODE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import {\r\n  getBaseArrayOfNotes,\r\n  getFullArrayAndMapIndexes,\r\n  setVisualEffect\r\n} from \"../arrayOfNotes\";\r\n\r\nimport {\r\n  UPDATE_PIANO_KEYS,\r\n  SET_BORDERS_OF_RANGE,\r\n  SHOW_NOTES_ON_THE_PIANO\r\n} from \"../actionTypes\";\r\n\r\nimport { dataOfIntervals } from \"../dataOfIntervals\";\r\n\r\nconst baseArrOfNotes = getBaseArrayOfNotes();\r\nconst { arrOfNotes, mapIndex } = getFullArrayAndMapIndexes(baseArrOfNotes);\r\nconst numberOfSemitones = dataOfIntervals.map(elem => elem.numberOfSemitones);\r\nconst minAmountOfNotes = Math.max.apply(null, numberOfSemitones);\r\n\r\nconst initialState = {\r\n  baseArrOfNotes,\r\n  arrOfNotes,\r\n  mapIndex,\r\n  firstBorder: { index: 0, key: baseArrOfNotes[0].key },\r\n  secondBorder: {\r\n    index: baseArrOfNotes.length - 1,\r\n    key: baseArrOfNotes[baseArrOfNotes.length - 1].key\r\n  },\r\n  sliceArr: baseArrOfNotes,\r\n  minAmountOfNotes\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BORDERS_OF_RANGE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n\r\n    case UPDATE_PIANO_KEYS: {\r\n      const sliceArr = getBaseArrayOfNotes(\r\n        state.firstBorder.index,\r\n        state.secondBorder.index\r\n      );\r\n      const { arrOfNotes, mapIndex } = getFullArrayAndMapIndexes(sliceArr);\r\n\r\n      return { ...state, arrOfNotes, sliceArr, mapIndex };\r\n    }\r\n\r\n    case SHOW_NOTES_ON_THE_PIANO: {\r\n      let { arrOfNotes, mapIndex } = state;\r\n\r\n      const { sequence, type } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        arrOfNotes: setVisualEffect({\r\n          arrOfNotes,\r\n          sequence,\r\n          type,\r\n          active: true,\r\n          mapIndex\r\n        })\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  dataOfIntervals,\r\n  getChosenIntervals,\r\n  getNewInterval,\r\n  getNewSequenceOfNotes\r\n} from \"../dataOfIntervals\";\r\n\r\nimport {\r\n  SET_ACTIVE_TYPE_OF_INTERVAL,\r\n  INTERVALS_SETTINGS_ACTION,\r\n  INVERSE_CHOSEN_INTERVAL,\r\n  SHOW_THE_CORRECT_INTERVAL,\r\n  GET_NEXT_INTERVAL\r\n} from \"../actionTypes\";\r\n\r\nconst allIntervals = [...dataOfIntervals];\r\n\r\nconst getNewActiveInterval = arr => {\r\n  let chosenIntervals = getChosenIntervals(arr);\r\n\r\n  let activeInterval = getNewInterval(chosenIntervals);\r\n\r\n  return activeInterval;\r\n};\r\n\r\nconst initialState = {\r\n  allIntervals,\r\n  typeOfInterval: \"melodicUp\",\r\n  activeInterval: \"\",\r\n  nextActiveInterval: \"\",\r\n  sequenceOfNotes: [],\r\n  settingsIsOpen: false,\r\n  showAnswer: false\r\n};\r\n\r\nconst findIndex = (arr, name) => {\r\n  const index = arr.findIndex(obj => obj.name === name);\r\n  return index;\r\n};\r\n\r\nconst getLengthOfChosenIntervals = arr => {\r\n  return arr.reduce((sum, elem) => {\r\n    return elem.chosen ? sum + 1 : sum;\r\n  }, 0);\r\n};\r\n\r\nconst getNewData = ({\r\n  initNewIntervalSequence,\r\n  nextActiveInterval,\r\n  nextSequenceOfNotes,\r\n  sliceArr,\r\n  allIntervals\r\n}) => {\r\n\r\n  const activeInterval = !initNewIntervalSequence\r\n    ? nextActiveInterval\r\n      ? nextActiveInterval\r\n      : getNewActiveInterval(allIntervals)\r\n    : getNewActiveInterval(allIntervals);\r\n\r\n\r\n  const sequenceOfNotes = !initNewIntervalSequence\r\n    ? nextSequenceOfNotes\r\n      ? nextSequenceOfNotes\r\n      : getNewSequenceOfNotes(sliceArr, activeInterval)\r\n    : getNewSequenceOfNotes(sliceArr, activeInterval);\r\n\r\n  nextActiveInterval = getNewActiveInterval(allIntervals);\r\n  nextSequenceOfNotes = getNewSequenceOfNotes(sliceArr, nextActiveInterval);\r\n\r\n  return {\r\n    sequenceOfNotes,\r\n    nextActiveInterval,\r\n    nextSequenceOfNotes,\r\n    activeInterval\r\n  };\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_TYPE_OF_INTERVAL: {\r\n      return { ...state, typeOfInterval: action.payload };\r\n    }\r\n\r\n    case INTERVALS_SETTINGS_ACTION: {\r\n      const settingsIsOpen = action.payload;\r\n      return { ...state, settingsIsOpen };\r\n    }\r\n\r\n    case INVERSE_CHOSEN_INTERVAL: {\r\n      const { payload } = action;\r\n      const chosen = payload.chosen;\r\n\r\n      const allIntervals = [...state.allIntervals];\r\n\r\n      if (chosen && getLengthOfChosenIntervals(allIntervals) <= 2) {\r\n        return { ...state };\r\n      }\r\n\r\n      const index = findIndex(allIntervals, payload.name);\r\n      payload.chosen = !payload.chosen;\r\n\r\n      allIntervals[index] = payload;\r\n\r\n      return { ...state, allIntervals };\r\n    }\r\n\r\n    case SHOW_THE_CORRECT_INTERVAL: {\r\n      return { ...state, showAnswer: true };\r\n    }\r\n\r\n    case GET_NEXT_INTERVAL: {\r\n      const { sliceArr, initNewIntervalSequence } = action.payload;\r\n      const { allIntervals } = state;\r\n\r\n      let {\r\n        sequenceOfNotes,\r\n        nextActiveInterval,\r\n        nextSequenceOfNotes,\r\n        activeInterval\r\n      } = getNewData({\r\n        sliceArr,\r\n        initNewIntervalSequence,\r\n        allIntervals,\r\n        nextActiveInterval: state.nextActiveInterval,\r\n        nextSequenceOfNotes: state.nextSequenceOfNotes\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        activeInterval,\r\n        sequenceOfNotes,\r\n        showAnswer: false,\r\n        nextActiveInterval,\r\n        nextSequenceOfNotes\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  INCREMENT_RIGHT_ANSWERS,\r\n  INCREMENT_AMOUNT_OF_ANSWERS,\r\n  NEXT_BUTTON_CLICK,\r\n  STATISTICS_CLEARING,\r\n  STATISTICS_HIDE_ANSWER\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  nameOfInterval: \"\",\r\n  rightAnswers: 0,\r\n  amountOfAnswers: 0,\r\n  right: false,\r\n  showAnswer: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case STATISTICS_CLEARING: {\r\n      return { ...state, ...initialState };\r\n    }\r\n\r\n    case INCREMENT_RIGHT_ANSWERS: {\r\n      const rightAnswers = state.rightAnswers + 1;\r\n      const amountOfAnswers = state.amountOfAnswers + 1;\r\n      return {\r\n        ...state,\r\n        rightAnswers,\r\n        amountOfAnswers,\r\n        nameOfInterval: action.payload ? action.payload : null,\r\n        right: true,\r\n        showAnswer: true\r\n      };\r\n    }\r\n    case INCREMENT_AMOUNT_OF_ANSWERS: {\r\n      const amountOfAnswers = state.amountOfAnswers + 1;\r\n      return {\r\n        ...state,\r\n        amountOfAnswers,\r\n        nameOfInterval: action.payload ? action.payload : null,\r\n        right: false,\r\n        showAnswer: true\r\n      };\r\n    }\r\n\r\n    case NEXT_BUTTON_CLICK: {\r\n      return { ...state, nameOfInterval: \"\", right: false };\r\n    }\r\n\r\n    case STATISTICS_HIDE_ANSWER: {\r\n      return { ...state, showAnswer: false };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { SET_ACTIVE_NOTE } from \"../actionTypes\";\r\n\r\nconst initialState = { note: null };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_NOTE: {\r\n      const sliceArr = action.sliceArr;\r\n      const note = sliceArr[Math.floor(Math.random() * sliceArr.length)].key;\r\n\r\n      return { ...state, note };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import {\r\n  GET_NEW_MELODY,\r\n  CHANGE_MODE,\r\n  ADD_NOTE_TO_ANSWER_ARRAY,\r\n  POP_LAST_ELEM_FROM_ANSWER_ARRAY,\r\n  WRITE_ANSWERS,\r\n  CLEAR_WRITTEN_MELODY,\r\n  CHANGE_SETTINGS\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  amountOfNotes: 4,\r\n  sequenceOfMelody: [],\r\n  sequenceOfWrittenMelody: [],\r\n  defaultModeWrite: false,\r\n  answers: [],\r\n  answerGiven: false\r\n};\r\n\r\nconst getNewMelody = ({ sliceArr, amountOfNotes }) => {\r\n  const sequence = [];\r\n  for (let i = 0; i < amountOfNotes; i++) {\r\n    const note = { ...sliceArr[Math.floor(Math.random() * sliceArr.length)] };\r\n    sequence.push(note);\r\n  }\r\n\r\n  return sequence;\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NEW_MELODY: {\r\n      const { amountOfNotes } = state;\r\n\r\n      const sliceArr = [...action.sliceArr];\r\n\r\n      const sequenceOfMelody = getNewMelody({ sliceArr, amountOfNotes });\r\n\r\n      return { ...state, sequenceOfMelody };\r\n    }\r\n    case CHANGE_MODE: {\r\n      const modeWrite = action.payload;\r\n      return { ...state, modeWrite };\r\n    }\r\n    case ADD_NOTE_TO_ANSWER_ARRAY: {\r\n      const { sequenceOfWrittenMelody } = state;\r\n      sequenceOfWrittenMelody.push(action.payload);\r\n\r\n      return { ...state, sequenceOfWrittenMelody };\r\n    }\r\n\r\n    case POP_LAST_ELEM_FROM_ANSWER_ARRAY: {\r\n      const sequenceOfWrittenMelody = [...state.sequenceOfWrittenMelody];\r\n\r\n      if (sequenceOfWrittenMelody.length > 0) {\r\n        sequenceOfWrittenMelody.pop();\r\n      }\r\n\r\n      return { ...state, sequenceOfWrittenMelody };\r\n    }\r\n\r\n    case WRITE_ANSWERS: {\r\n      const answerGiven = action.payload.length > 0;\r\n      return { ...state, answers: action.payload, answerGiven };\r\n    }\r\n\r\n    case CLEAR_WRITTEN_MELODY: {\r\n      return { ...state, sequenceOfWrittenMelody: [] };\r\n    }\r\n\r\n    case CHANGE_SETTINGS: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport application from \"./applicationReducer\";\r\nimport piano from \"./pianoReducer\";\r\nimport intervals from \"./intervalsReducer\";\r\nimport statistics from \"./statisticsReducer\";\r\nimport notes from \"./notesReducer\";\r\nimport dictation from \"./dictationReducer\";\r\n\r\nexport default combineReducers({\r\n  application,\r\n  piano,\r\n  intervals,\r\n  statistics,\r\n  notes,\r\n  dictation\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistedState = localStorage.getItem(\"reduxState\")\r\n  ? JSON.parse(localStorage.getItem(\"reduxState\"))\r\n  : {};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => {\r\n  const state = store.getState();\r\n\r\n  const sliceState = {};\r\n\r\n  sliceState.piano = state.piano;\r\n  sliceState.dictation = state.dictation;\r\n\r\n  const { allIntervals, typeOfInterval } = state.intervals;\r\n  sliceState.intervals = { allIntervals, typeOfInterval };\r\n\r\n  localStorage.setItem(\"reduxState\", JSON.stringify(sliceState));\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/appContainer\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<HashRouter basename={\"/\"} >\r\n\t\t\t<App />\r\n\t\t</HashRouter>\r\n\t</Provider >,\r\n\tdocument.getElementById(\"root\")\r\n);"],"sourceRoot":""}